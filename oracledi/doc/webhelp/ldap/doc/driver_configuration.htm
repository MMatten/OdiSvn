<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<!-- saved from url=(0026)http://www.macromedia.com/ -->
<html>

<head>
<title>Driver Configuration</title>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
<meta name="generator" content="RoboHelp by eHelp Corporation www.ehelp.com">
<link rel="stylesheet" href="common_ns.css"><script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='common.css'>");}
//-->
</script>
<style type="text/css">
<!--
p.whs1 { font-weight:normal; }
ul.whs2 { list-style:disc; }
tr.whs3 { x-cell-content-align:center; }
th.whs4 { text-align:left; width:25%; }
th.whs5 { text-align:left; width:10%; }
th.whs6 { width:55%; }
td.whs7 { x-cell-content-align:top; width:25%; }
td.whs8 { x-cell-content-align:top; width:10%; }
td.whs9 { x-cell-content-align:top; width:55%; }
p.whs10 { font-weight:bold; }
p.whs11 { margin-left:40px; }
ol.whs12 { list-style:decimal; }
p.whs13 { margin-left:40px; font-weight:normal; }
-->
</style><script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute; left:0px; top:0px; z-index:4; visibility:hidden; }
-->
</style><script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script  type="text/javascript" language="javascript1.2">
    <!--
    var linkedScrollbarStyle = "<link rel='stylesheet' href='../wf_topics.css'>";
    if( (!isTopicOnly()) &&(parent.gbFHPureHtml == null) )
    {
        document.write(linkedScrollbarStyle);
    }
    //-->
</script>
</head>
<body><script type="text/javascript" language="javascript1.2">
<!--
if (window.addTocInfo)
{
addTocInfo("Oracle Data Integrator Driver for LDAP\nDriver Configuration");

  addShowButton();
}
if (window.setRelStartPage)
{
setRelStartPage("../index.htm");

	sendTopicLoaded();
	autoSync(1);
	sendSyncInfo();
	sendAveInfo();
	sendBgColorInfo();
}
//-->
</script>
<h1>Driver Configuration</h1>

<h2>Driver Parameters</h2>

<h3>Driver Name</h3>

<p>The driver is called:</p>

<p class="whs1"><b style="font-weight: bold;"><span class=Code>com.sunopsis.ldap.jdbc.driver.SnpsLdapDriver</span></b></p>

<h3>URL Syntax</h3>

<p>The URL Syntax for the LDAP JDBC Driver:</p>

<ul type="disc" class="whs2">
	
	<li class=kadov-p><p><span class=Code><b style="font-weight: bold;">jdbc:snps:ldap?</b></span><span 
 class=Code
	style="color: #808080;"><font color=gray >&lt;parameter=value&gt;[</font></span><span class=Code><b>&amp;</b></span><span 
 class=Code
	style="color: #808080;"><font color=gray >...]</font></span></p></li>
	
	<li class=kadov-p><p><span class=Code><b style="font-weight: bold;">jdbc:snps:ldap2?</b></span><span 
 class=Code
	style="color: #808080;"><font color=gray >&lt;parameter=value&gt;[</font></span><span class=Code><b>&amp;</b></span><span 
 class=Code
	style="color: #808080;"><font color=gray >...]</font></span></p></li>
</ul>

<p>The first URL requires the LDAP directory password to be encoded. The 
 second URL allows you to give the <a href="#LDAPpassword">LDAP directory 
 password</a> without encoding it. This method may be used if the application 
 using the driver already stores the password is a safe location.</p>

<h3>URL Parameters</h3>

<p>Valid parameters for the URL are detailed below and are case insensitive:</p>

<table x-use-null-cells>
<col>
<col>
<col>
<col>
<col>

<tr valign="middle" class="whs3">
<th align="left" width="25%" class="whs4">
<p class=TitreTableau>Parameter</th>
<th align="left" width="10%" class="whs5">
<p class=TitreTableau>Mandatory</th>
<th colspan="1" rowspan="1" align="left" width="10%" class="whs5">
<p class=TitreTableau>Type</th>
<th align="left" width="10%" class="whs5">
<p class=TitreTableau>Default</th>
<th width="55%" class="whs6">
<p class=TitreTableau>Description</th></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>db_props</span> or <span class=Code>dp</span></td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>string (file location)</td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>Empty string</td>
<td valign="top" width="55%" class="whs9">
<p class=TexteTableau>Name (without file extension) of a bundle (a .<span 
 style="font-style: italic;"><I>properties </I></span>file which must be declared 
 in the classpath) containing connection data to an external database. 
 See &quot;<a href="#ExternalDB">Using an external database</a>&quot; for 
 details concerning bundle format.</td></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>ldap_props</span> or <span class=Code>lp</span></td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>string (file location)</p>
&nbsp;</td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>N/A</td>
<td valign="top" width="55%" class="whs9">
<p class=TexteTableau>Name (without file extension) of a bundle (a .<span 
 style="font-style: italic;"><I>properties </I></span>file which must be declared 
 in the classpath) containing connection data to an LDAP directory. See 
 &quot;<a href="#ConnectingLDAPServer">Connecting to an LDAP Server</a>&quot; 
 for details concerning bundle format. Note that if this parameter is omitted 
 all mandatory ldap_* properties of the bundle should be specified in the 
 URL.</td></tr>

<tr valign="middle" class="whs3">
<td colspan="1" rowspan="1" valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>lm_props</span> or <span class=Code>lm</span></p>
<p class=textetableau>&nbsp;</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>&nbsp;No</p>
<p class=textetableau>&nbsp;</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>string (file location)</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>N/A</td>
<td colspan="1" rowspan="1" valign="top" width="55%" class="whs9">
<p class=TexteTableau>Name (without file extension) of a bundle (a .<span 
 style="font-style: italic;"><I>properties </I></span>file which must be declared 
 in the classpath) containing connection data to an LDAP directory which 
 will be used to perform mapping only. See &quot;<a href="#ConnectingLDAPServer">Connecting 
 to an LDAP Server</a>&quot; for details concerning bundle format. If this 
 parameter is omitted the mapping operation is performed from &nbsp;the 
 data connection (<span class=Code>ldap_props </span>parameter). Properties 
 of this bundle can still be overridden using lm_* properties. For more 
 details see &quot;<a href="how_does_it_work.htm#MANAGING_LDAP_MODELS">Manipulating 
 LDAP Models</a>&quot;.</td></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>case_sens</span> or <span class=Code>cs</span></td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>boolean (true | false)</td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>false</td>
<td valign="top" width="55%" class="whs9">
<p class=TexteTableau>Enable / disable case sensitive mode for both LDAP- 
 and RDBMS-managed &nbsp;objects.. 
 </td></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>alias_bundle</span> or <span class=Code>ab</span></td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>string (file location)</td>
<td valign="top" width="10%" class="whs8">
<p>Empty string</td>
<td valign="top" width="55%" class="whs9">
<p class=TexteTableau>Name (without file extension) of a bundle containing 
 a list of aliases for the relational tables mapped to the LDAP tree. Note 
 that this file may be accessed in read-only mode. See &quot;<a href="#MakingAliases">Making 
 Table Aliases</a>&quot; for more details concerning file format.</td></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>grouping_factor</span> or <span 
 class=Code>gf</span></td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>alphanumeric</td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>2</td>
<td valign="top" width="55%" class="whs9">
<p class=TexteTableau>Determines how many object classes will be grouped 
 together to set up a single relational table mapping.</td></tr>

<tr valign="middle" class="whs3">
<td colspan="1" rowspan="1" valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>key_column</span> or <span class=Code>kc</span></td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>boolean (true | false)</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>false</td>
<td colspan="1" rowspan="1" valign="top" width="55%" class="whs9">
<p>If set to true, a technical column called &quot;SNPSLDAPKEY&quot; is 
 created in the relational tables. These columns contain the LDAP &quot;identifier&quot; 
 (the relative distinguished name) for each &quot;LDAP entry&quot; of the 
 LDAP hierarchy. These columns are <span style="font-weight: bold;"><B>not</B></span> 
 created in the relational tables originating from multiple valued LDAP 
 <span style="font-weight: bold;"><B>attributes</B></span>.</td></tr>

<tr valign="middle" class="whs3">
<td colspan="1" rowspan="1" valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>numeric_ids</span> or <span class=Code>ni</span></td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>boolean (true | false)</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>false</td>
<td colspan="1" rowspan="1" valign="top" width="55%" class="whs9">
<p class=TexteTableau>If set to true, all internal Primary and Foreign 
 Keys are of NUMERIC type. Otherwise, they are of the VARCHAR type.</td></tr>

<tr valign="middle" class="whs3">
<td colspan="1" rowspan="1" valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>id_length</span> or <span class=Code>il</span></p>
<p class=textetableau>&nbsp;</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>Alphanumeric</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>10 / 30</td>
<td colspan="1" rowspan="1" valign="top" width="55%" class="whs9">
<p class=TexteTableau>The length of the internal Primary and Foreign Key 
 columns. The default is 10 for NUMERIC column types and 30 for VARCHAR 
 column &nbsp;types.</td></tr>

<tr valign="middle" class="whs3">
<td colspan="1" rowspan="1" valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>table_prefix</span> or <span class=Code>tp</span></p>
<p class=textetableau>&nbsp;</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>string</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>N/A</td>
<td colspan="1" rowspan="1" valign="top" width="55%" class="whs9">
<p class=TexteTableau>This specifies the prefix added to relational tables 
 of the current connection.</td></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>log_file</span> or <span class=Code>lf</span></td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>string (file location)</td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>N/A</td>
<td valign="top" width="55%" class="whs9">
<p class=TexteTableau>Trace log file name. If the log file name is not 
 set the trace data is displayed on the standard output. </p>
<p class=TexteTableau>The presence of this parameter triggers trace logging 
 for a particular relational model.</td></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>log_level</span> or <span class=Code>ll</span></td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>alphanumeric</td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>1</td>
<td valign="top" width="55%" class="whs9">
<p class=TexteTableau>Log level. This parameter is ignored if <span class=Code>log_file 
 </span>is not specified. The log level can is a bit mask that can be specified 
 either in hexadecimal or decimal value.</p>
<p class=TexteTableau>Log Level Values:</p>
<ul type="disc" class="whs2">
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>0x1 (1): General 
 information (important)</p></li>
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>0x2 (2): General 
 information (detailed)</p></li>
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>0x4 (4): SQL 
 statements</p></li>
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>0x8 (8): LDAP-Relational 
 mapping information</p></li>
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>0x10 (16): LDAP-Relational 
 mapping validation &amp; renaming information (Table and columns name 
 modifications, etc)</p></li>
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>0x20 (32): Display 
 the LDAP model parsed and the corresponding relational model.</p></li>
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>0x40 (64): Display 
 the table creation statements.</p></li>
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>0x80 (128): Display 
 data insert statements.</p></li>
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>0x100 (256): 
 Grouping information (important)</p></li>
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>0x200 (512): 
 Grouping information (detailed)</p></li>
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>0x400 (1024): 
 Display details on the relational model building</p></li>
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>0x800 (2048): 
 Display the elements read from the LDAP tree</p></li>
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>0x1000 (4096): 
 Display SQL statements causing changes into the LDAP tree</p></li>
</ul>
<p class=TexteTableau>Examples: </p>
<ul type="disc" class="whs2">
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>Important and 
 detailed general information : <span class=Code>log_level=3</span> (1+2)</p></li>
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>Trace native 
 SQL commands and important internal events: <span class=Code>log_level=5</span> 
 (1+4)</p></li>
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>Trace relational 
 mapping calculation and validation: <span class=Code>log_level=24</span> 
 (16+8)</p></li>
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>Trace all events: 
 <span class=Code>log_level=8191</span> (1+2+ ... + 2048 + 4096)</p></li>
</ul></td></tr>
</table>

<h2>Overriding LDAP or DB properties in the URL</h2>

<p>As described in the above table, the OracleDI Driver for LDAP URL may 
 specify parameters indicating the use of <span style="font-style: italic;"><I>.properties</I></span><span> 
 files. These files contain specific parameters necessary for connection 
 to the various databases concerned. These values, however, </span>may 
 be overridden by indicating prefixed values directly in the call to the 
 URL itself.</p>

<p>The specifications for overriding <span style="font-style: italic;"><I>.properties</I></span><span> 
 values in the URL are the following</span>:</p>

<ul type="disc" class="whs2">
	
	<li class=kadov-p><p><span class=Code
								style="font-weight: bold;"><B>LDAP data connection 
 properties:</B></span>prefix the chosen property name with &quot;ldap_&quot;. 
 For example, &quot;ldap_basedn&quot;</p></li>
	
	<li class=kadov-p><p class="whs10"><span class=Code><B>LDAP 
 model/metadata connection properties:</B></span><span style="font-weight: normal;">prefix 
 the &nbsp;chosen 
 property name with &quot;lm_&quot;. For example, &quot;lm_basedn&quot;</span></p></li>
	
	<li class=kadov-p><p class="whs10"><span class=Code><B>DB 
 properties:</B></span><span style="font-weight: normal;">prefix the &nbsp;chosen 
 property name with &quot;db_&quot;. For example, &quot;db_schema&quot; 
 or &quot;db_s&quot;</span></p></li>
</ul>

<p>Examples using these specifications follow:</p>

<h3>URL Examples</h3>

<p><span class=ElementGUI>jdbc:snps:ldap?lp=ldap_mir&amp;ldap_basedn=o=tests&amp;gf=10&amp;lf=</span></p>

<p class="whs11">Connects to the LDAP directory specified 
 in the ldap_mir bundle, overriding basedn property of the ldap bundle 
 and using a grouping factor of 10. General information (important) are 
 sent to the standard output.</p>

<p class="whs10">jdbc:snps:ldap?lp=ldap_ours&amp;lm=generic&amp;ab=c:/tmp/aliases.txt&amp;gf=10&amp;kc=true</p>

<p class="whs11">Connects to the LDAP directory using the 
 ldap_ours bundle; a generic Directory tree for relational model creation 
 is signaled by the lm parameter; an alias bundle file is used for the 
 creation of the relational structure; a maximum grouping factor of 10 
 is used; key column creation is enabled for the SNPSLDAPKEY field to allow 
 updates requests in the relational model.</p>

<p><span class=ElementGUI>jdbc:snps:ldap?lp=ldap_mir&amp;dp=mysql_mir_ldap&amp;ldap_basedn=dc=tests&amp;lm=ldap_mir&amp;lm_basedn=dc=model&amp;ab=d:/temp/mapldap.txt&amp;db_lm=n&amp;gf=0&amp;lf=c:/temp/logfile.log&amp;ll=8191</span></p>

<p class="whs11">Connects to the LDAP directory using the 
 ldap_mir bundle; overriding ldap basedn property; using the &quot;dc=model&quot; 
 subtree of the same directory to perform mapping; using an alias bundle; 
 overriding the lm database property (load mode); specifying a grouping 
 factor of 0 to indicate no grouping (grouping disabled); Full trace logging 
 is activated.</p>

<p><span class=ElementGUI>jdbc:snps:ldap?ldap_url=ldap://hydraroid:389/dc=localhost,dc=localdomain&amp;ldap_password=KPLEKFMJKCLFJMDFDDGPGPDB&amp;ldap_user=cn=orcladmin&amp;ldap_basedn=ou=applications</span></p>

<p class="whs11">Connects to a LDAP directory on the hydraroid 
 machine. The LDAP server connection information - url, base dn, user and 
 password - is specified in the URL using the ldap_xxx parameters.</p>

<h2><a name=ConnectingLDAPServer></a>Connecting to an LDAP Server</h2>

<p>The OracleDI Driver for LDAP may use a .<span style="font-style: italic;"><I>properties</I></span> 
 file to store parameter information for the connection to the LDAP server. 
 This file will be used at connection time when the <span class=Code>ldap_props</span> 
 (<span class=Code>lp</span> ) parameter is set in the LDAP driver URL 
 (see above).</p>

<p>Valid case-sensitive parameters are described below:</p>

<table x-use-null-cells>
<col>
<col>
<col>
<col>
<col>

<tr valign="middle" class="whs3">
<th align="left" width="25%" class="whs4">
<p>Parameter</th>
<th align="left" width="10%" class="whs5">
<p class=TitreTableau>Mandatory</th>
<th colspan="1" rowspan="1" align="left" width="10%" class="whs5">
<p class=TitreTableau>Type</th>
<th align="left" width="10%" class="whs5">
<p class=TitreTableau>Default</th>
<th width="55%" class="whs6">
<p class=TitreTableau>Description</th></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>auth</span></td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>string</td>
<td valign="top" width="10%" class="whs8">
<p>simple</td>
<td valign="top" width="55%" class="whs9">
<p class=TexteTableau>The authentication method</td></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>url</span></td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>Yes</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>string</td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>N/A</td>
<td valign="top" width="55%" class="whs9">
<p class=TexteTableau>URL to connect to the directory. It is an LDAP URL.</p>
<p class=Remarque><span class=RemarqueTitre>Note</span>: This driver supports 
 the LDAPS (LDAP over SSL) protocol. The LDAPS URL must start with ldaps://. 
 To connect a server using LDAPS, you must manually install the certificate 
 in the java machine. See the <span style="font-style: italic;"><I>keytool</I></span> 
 program provided with the JVM for more information.</td></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code><a name=LDAPpassword></a>user</span></td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>string</td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>Empty string</td>
<td valign="top" width="55%" class="whs9">
<p class=TexteTableau>The LDAP server user-login name. Mandatory only if 
 &quot;auth&quot; is set.</p>
<p class=Remarque><span class=RemarqueTitre>Note</span>: If user and password 
 properties are provided to create the connection with the JDBC Driver 
 for LDAP, then they are used to connect the LDAP directory.</td></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>password</span></td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>string</td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>Empty string</td>
<td valign="top" width="55%" class="whs9">
<p class=TexteTableau>LDAP server user-login password. Mandatory only if 
 &quot;auth&quot; is set. </p>
<p class=Remarque><span class=RemarqueTitre>Note</span>: The password needs 
 to be encrypted, unless the '<span class=Code>jdbc:snps:ldap2</span>' 
 URL syntax.</p>
<p class=Remarque><span class=RemarqueTitre>Note</span>: Use the following 
 command to encrypt the password :<span class=Code><br>
java -cp snpsldapo.jar com.sunopsis.ldap.jdbc.driver.SnpsLdapEncoder password</span></td></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>basedn</span></td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>&nbsp;No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>string</td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>N/A</td>
<td valign="top" width="55%" class="whs9">
<p>The base dn with which you wish to connect to the LDAP tree. If it not 
 specified, the base dn specified in the LDAP URL is used.</td></tr>
</table>

<p>Below is an example of a LDAP properties file:</p>

<p class="whs11"><span class=Code>url=</span><span class=Code
	style="color: #808080;"><font color=gray >ldap://ours:389</font></span></p>

<p class="whs11"><span class=Code>user=</span><span class=Code
	style="color: #808080;"><font color=gray >cn=Directory Manager</font></span></p>

<p class="whs11"><span class=Code>password=</span><span class=Code
	style="color: #808080;"><font color=gray >IIJOIGMFIHKHGIDFDDGPGPDB</font></span></p>

<p class="whs11"><span class=Code>basedn=</span><span class=Code
	style="color: #808080;"><font color=gray >dc=oracle,dc=com</font></span></p>

<h2><a name=ExternalDB></a>Using an external database to store data</h2>

<p>OracleDI Driver for LDAP may store the relational structure mapping 
 of the LDAP tree in an external RDBMS engine. </p>

<p class=Remarque><span class=RemarqueTitre>Note</span>: A number of technologies 
 are supported for storage. These technologies include Oracle, Microsoft 
 SQL Server, MySQL, Hypersonic SQL, etc. Please contact the technical support 
 for an updated list of supported technologies.</p>

<h3>Using an external database</h3>

<p>To use an external database, you must have:</p>

<ol type="1" class="whs12">
	
	<li class=kadov-p><p>a file with the <span class=Code>.properties</span> 
 extension. This <span class=ElementGUI>External Database Properties File</span> 
 contains the properties of a JDBC connection to the relational database 
 schema to be used.</p></li>
	
	<li class=kadov-p><p>this <span class=Code>.properties</span> file 
 in the <span class=ElementGUI>classpath</span> of your Java application 
 using the OracleDI Driver for LDAP</p></li>
	
	<li class=kadov-p><p>the <span class=Code>db_props</span> parameter 
 in the JDBC <span class=ElementGUI>URL</span> set to the name of the properties 
 file (without the .properties extension)</p></li>
</ol>

<p class=Remarque><span class=AlertTitre>Important note</span>: When connecting 
 to the external database, the OracleDI Driver for LDAP uses JDBC connectivity. 
 This must be correctly configured for the database connection and the 
 JDBC driver file paths - .jar and .zip - should be set &nbsp;in 
 the classpath variable of your Java application.</p>

<h3>External Database Properties File</h3>

<p>The <span class=ElementGUI>External Database Properties File</span> 
 is a text file containing a set of lines with on each line a <span class=Code>&lt;property&gt;=&lt;value&gt; 
 </span>pair:</p>

<p>The valid properties are described below:</p>

<table x-use-null-cells>
<col>
<col>
<col>
<col>
<col>

<tr valign="middle" class="whs3">
<th align="left" width="25%" class="whs4">
<p>Properties</th>
<th align="left" width="10%" class="whs5">
<p class=TitreTableau>Mandatory</th>
<th colspan="1" rowspan="1" align="left" width="10%" class="whs5">
<p class=TitreTableau>Type</th>
<th align="left" width="10%" class="whs5">
<p class=TitreTableau>Default</th>
<th width="55%" class="whs6">
<p class=TitreTableau>Description</th></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>driver</span></td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>Yes</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>string</td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>N/A</td>
<td valign="top" width="55%" class="whs9">
<p class=TexteTableau>JDBC driver name.</p>
<p class=Remarque><span class=AlertTitre>Important</span>: The driver file 
 must be in the classpath of the Java application.</td></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>url</span></td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>Yes</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>string</td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>N/A</td>
<td valign="top" width="55%" class="whs9">
<p class=TexteTableau>JDBC URL</td></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>user</span></td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>string</td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>Empty string</td>
<td valign="top" width="55%" class="whs9">
<p class=TexteTableau>Login used to connect the database</td></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>password</span></td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>string</td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>Empty string</p>
<p class=textetableau>&nbsp;</td>
<td valign="top" width="55%" class="whs9">
<p class=TexteTableau>Encrypted database user password.</p>
<p class=Remarque><span class=RemarqueTitre>Note</span>: Use the following 
 command to encrypt the password :<span class=Code><br>
java -cp snpsldapo.jar com.sunopsis.ldap.jdbc.driver.SnpsLdapEncoder password</span></td></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>schema</span></td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>string</td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>Empty string</td>
<td valign="top" width="55%" class="whs9">
<p class=TexteTableau>Database schema (if exists) storing the LDAP Tree</td></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>catalog</span></td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>string</td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>Empty string</p>
<p class=textetableau>&nbsp;</td>
<td valign="top" width="55%" class="whs9">
<p class=TexteTableau>For Microsoft SQL Server only &nbsp;storing 
 the LDAP tree. This parameter should not be used simultaneously with the 
 <span class=Code>schema</span> parameter.</td></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>drop_on_disconnect</span> or <span 
 class=Code>dod</span></td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>boolean (Y | N)</td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>true</td>
<td valign="top" width="55%" class="whs9">
<p class=TexteTableau>If true, drop the tables from the database at disconnection 
 time. If set to false the tables are preserved in the database.</td></tr>

<tr valign="middle" class="whs3">
<td valign="top" width="25%" class="whs7">
<p class=TexteTableau><span class=Code>load_mode</span> or &nbsp;<span 
 class=Code>lm</span> </td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>No</td>
<td colspan="1" rowspan="1" valign="top" width="10%" class="whs8">
<p class=TexteTableau>string</td>
<td valign="top" width="10%" class="whs8">
<p class=TexteTableau>ci</td>
<td valign="top" width="55%" class="whs9">
<p class=TexteTableau>The loading method. Values may be:</p>
<p class=TexteTableau>n (none): the model and table mappings are created 
 in memory only.</p>
<p class=TexteTableau>dci (drop_create_insert): drop all tables that may 
 cause name conflicts then create tables and load the LDAP tree into the 
 relational model. </p>
<p class=TexteTableau>ci(create_insert): Create the relational tables and 
 throw an exception for existing tables then loads the LDAP tree into the 
 relational model.</td></tr>
</table>

<p>Below is an example of an external database properties file to connect 
 an Oracle external database:</p>

<p class="whs11"><span class=Code>driver=</span><span class=Code
	style="color: #808080;"><font color=gray >oracle.jdbc.driver.OracleDriver</font></span></p>

<p class="whs11"><span class=Code>url=</span><span class=Code
	style="color: #808080;"><font color=gray >jdbc:oracle:thin:@hydraro:1521:SNPTST1</font></span></p>

<p class="whs11"><span class=Code>user=</span><span class=Code
	style="color: #808080;"><font color=gray >LDAP_T_1</font></span></p>

<p class="whs11"><span class=Code>password=</span><span class=Code
	style="color: #808080;"><font color=gray >IIJOIGMFIHKHGIDFDDGPGPDB</font></span></p>

<p class="whs11"><span class=Code>schema=</span><span class=Code
	style="color: #808080;"><font color=gray >LDAP_T_1</font></span></p>

<h2><a name=MakingAliases></a>Making Table Aliases</h2>

<p>The OracleDI Driver for LDAP allows a certain flexibility in the definition 
 of &nbsp;the 
 model table names in Oracle Data Integrator by the use of table aliases. 
 This is particularly useful when the algorithm used to navigate the LDAP 
 tree generates long composite names from the LDAP object class hierarchy. 
 To avoid issues related to RDBMS-specific object name-length constraints, 
 the OracleDI Driver for LDAP can set up and use aliases. &nbsp;</p>

<p class=Remarque><span class=RemarqueTitre>Note</span>: It is also possible 
 to change the default &quot;Maximum Table Name Length&quot; and &quot;Maximum 
 Column Name Length&quot; values &nbsp;which 
 are set in the Technology node of the Physical Architecture tree view 
 managed in Topology Manager.</p>

<p>To set up table aliases, if the URL &quot;alias_bundle&quot; parameter 
 is set, its value specifies a file consisting of records which will be 
 made up of &lt;original table name &gt; = &lt;desired alias name&gt; values. 
 </p>

<p>For example:</p>

<p class="whs13"><span class=Code>....</span></p>

<p class="whs13"><span class=Code>ORGANIZATIONALUNIT_RFC822MAILMEMBER 
 = ORG_228MAIL</span></p>

<p class="whs13"><span class=Code>INETORGPERSON_ORGANIZATIONALPERSON_PERSON 
 = ORG_PERSON</span></p>

<p class="whs13"><span class=Code>ORGANIZATIONALUNIT_MEMBER 
 = ORG_UN_MEMBER</span></p>

<p class="whs13"><span class=Code>ORGANIZATIONALUNIT 
 = ORG_UNIT</span></p>

<p class="whs13"><span class=Code>....</span></p>

<p>&nbsp;</p>

<p>If any modifications have been applied to the object class structure 
 or attribute sets of the LDAP directory, the driver will rewrite this 
 file while including the new or modified entries to the table name list. 
 </p>

<p>This file is initially created by the driver at connection time <span 
 style="font-weight: bold;"><B>when</B></span> specifying the &quot;alias_bundle&quot; 
 parameter. Typically, a user connects initially through the OracleDI Driver 
 for LDAP which creates this file containing a list of potential table 
 names to be created by the reverse engineering operation. The user may 
 then modify the content of the file to specify the aliases before reconnecting 
 to the LDAP server and generating the relational schema with the appropriate 
 aliases. </p>

</body>
</html>
