<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<head>
<title>XML Schema Supported Features</title>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
<meta name="generator" content="RoboHelp by eHelp Corporation www.ehelp.com">
<link rel="stylesheet" href="common_ns.css"><script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='common.css'>");}
//-->
</script>
<style type="text/css">
<!--
ul.whs1 { list-style:disc; }
p.whs2 { font-weight:bold; }
p.whs3 { margin-left:40px; color:#c0c0c0; }
p.whs4 { margin-left:40px; font-weight:bold; }
p.whs5 { margin-left:40px; font-weight:normal; font-style:normal; color:#c0c0c0; }
p.whs6 { margin-left:40px; font-weight:normal; color:#c0c0c0; }
p.whs7 { margin-left:40px; }
p.whs8 { color:#c0c0c0; }
p.whs9 { margin-left:40px; font-style:normal; font-weight:normal; color:#c0c0c0; }
p.whs10 { color:#808080; }
-->
</style><script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute; left:0px; top:0px; z-index:4; visibility:hidden; }
-->
</style><script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script  type="text/javascript" language="javascript1.2">
    <!--
    var linkedScrollbarStyle = "<link rel='stylesheet' href='../wf_topics.css'>";
    if( (!isTopicOnly()) &&(parent.gbFHPureHtml == null) )
    {
        document.write(linkedScrollbarStyle);
    }
    //-->
</script>
</head>
<body><script type="text/javascript" language="javascript1.2">
<!--
if (window.addTocInfo)
{
addTocInfo("Appendix\nXML Schema Supported Features");

  addShowButton();
}
if (window.setRelStartPage)
{
setRelStartPage("../index.htm");

	sendTopicLoaded();
	autoSync(1);
	sendSyncInfo();
	sendAveInfo();
	sendBgColorInfo();
}
//-->
</script>
<h1><b style="font-weight: bold;">XML Schema Supported F</b>eatures</h1>

<p>The driver supports part of the XML Schema (XSD) specification. Supported 
 elements are given below. Other elements will be supported in future versions 
 of the driver.</p>

<p>For more information on the XML Schema specification, see the W3C specification 
 at <a title="XML Schema W3C Specification"
		href="http://www.w3.org/TR/xmlschema-1/"
		target=_blank>http://www.w3.org/TR/xmlschema-1/</a>.</p>

<h2>Datatypes</h2>

<p>The following datatypes are supported:</p>

<ul type="disc" class="whs1">
	
	<li class=kadov-p><p>These datatypes are converted to <span style="font-weight: bold;"><B>String</B></span> 
 columns: <span class=Code>string, normalizedString, token, nmtoken, nmtokens, 
 anyUri, id, idref, date, datetime, time, hexBinary</span> </p></li>
	
	<li class=kadov-p><p>These datatypes are converted to <span style="font-weight: bold;"><B>Integer</B></span> 
 columns: <span class=Code>int, positiveInteger, negativeInteger, nonNegativeInteger, 
 onPositiveInteger, long, unsignedLong, unsignedInt, short, unsignedShort, 
 byte, unsignedByte</span> , <span class=Code>boolean </span><span style="background-color: #ffff00;">(Boolean 
 are converted to a numeric column with 0 or 1, but they can take &quot;true&quot; 
 or &quot;false&quot; values from the input files)</span></p></li>
	
	<li class=kadov-p><p>These datatypes are converted to <span style="font-weight: bold;"><B>Decimal</B></span> 
 (with 2 decimal places)<span style="font-weight: bold;"> <B></B></span>columns: 
 <span class=Code>decimal, float, double</span> &nbsp;</p></li>
</ul>

<h2>Supported Elements</h2>

<p>All schema elements are listed below. Supported syntax elements are 
 shown in black. Unsupported syntax elements are in <span style="color: #c0c0c0;"><font color=silver >grey</font></span>.<span 
 style="color: #c0c0c0;"> <font color=silver ></font></span>They are ignored by the driver.</p>

<p class=Remarque><span class=AlertTitre>Important Note</span>: XML files 
 generated or updated using the XML driver should ideally be validated 
 against their corresponding XSD files using the <a HREF="driver_commands.htm#VALIDATE">VALIDATE</a> 
 command after generation.</p>

<h3>All</h3>

<p>This element specifies that child elements can appear in any order and 
 that each child element can occur zero or one time.</p>

<p class=Remarque><span class=ElementGUI>Note</span>: Child elements mandatory 
 properties (<span class=Code>minOccurs=1</span>) are not managed by the 
 driver. This should be handled by checks on the data, and by validating 
 the XML contents against the XSD.</p>

<p class="whs2"><span class=Code><B>&lt;all</B></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >id=ID</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >maxOccurs=1</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >minOccurs=0|1</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >any 
 attributes</font></span></p>

<p><span class=Code>&gt;</span></p>

<p><span class=Code>(</span><span class=Code
									style="color: #c0c0c0;"><font color=silver >annotation</font></span><span 
 class=Code>?,element*)</span></p>

<p class="whs2"><span class=Code><B>&lt;/all&gt;</B></span></p>

<h3>Attribute</h3>

<p>This element defines an attribute.</p>

<p class=Remarque><span class=RemarqueTitre>Note</span>: The <span class=Code>use</span> 
 attribute of this element defines the column mapped by the driver for 
 the attribute as mandatory or not.</p>

<p class="whs2"><span class=Code><B>&lt;attribute</B></span></p>

<p class="whs4"><span class=Code><B>default=</B></span><span 
 class=Code
	style="font-weight: normal; font-style: italic;"><I>string</I></span></p>

<p class="whs5"><span class=Code
									style="color: #c0c0c0;"><font color=silver >id=ID</font></span></p>

<p class="whs4"><span class=Code><B>name=</B></span><span 
 class=Code
	style="font-weight: normal; font-style: italic;"><I>NCName</I></span></p>

<p class="whs4"><span class=Code><B>type=</B></span><span 
 class=Code
	style="font-weight: normal; font-style: italic;"><I>QName</I></span></p>

<p class="whs4"><span class=Code><B>use=optional</B></span><span 
 class=Code
	style="font-weight: normal; color: #c0c0c0;"><font color=silver >|prohibited</font></span><span 
 class=Code>|required</span></p>

<p class="whs6"><span class=Code
									style="color: #c0c0c0;"><font color=silver >ref=QName</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >fixed=string</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >form=qualified|unqualified</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >any 
 attributes</font></span></p>

<p class="whs2"><span class=Code><B>&gt;</B></span></p>

<p><span class=Code>(</span><span class=Code
									style="color: #c0c0c0;"><font color=silver >annotation</font></span><span 
 class=Code>?,(simpleType?))</span></p>

<p class="whs2"><span class=Code><B>&lt;/attribute&gt;</B></span></p>

<h3>AttributeGroup</h3>

<p>This element defines a set of attributes.</p>

<p><span class=Code>&lt;</span><span class=Code
									style="font-weight: bold;"><B>attributeGroup</B></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >id=ID</font></span></p>

<p class="whs7"><span class=Code
									style="font-weight: bold;"><B>name</B></span><span 
 class=Code>=</span><span class=Code
							style="font-style: italic;"><I>NCName</I></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >ref=QName</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >any 
 attributes</font></span></p>

<p><span class=Code>&gt;</span></p>

<p><span class=Code
		style="color: #c0c0c0;"><font color=silver >(annotation?),((</font></span><span class=Code>attribute</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >|attributeGroup)*,anyAttribute?))</font></span></p>

<p><span class=Code>&lt;/</span><span class=Code
										style="font-weight: bold;"><B>attributeGroup</B></span><span 
 class=Code>&gt;</span></p>

<h3>Choice</h3>

<p>This element allows one and only of the elements to be present within 
 the containing element.</p>

<p class=Remarque><span class=ElementGUI>Note</span>: The child element 
 unique nature are not managed by the driver. This should be handled by 
 checks on the data, and by validating the XML contents against the XSD.</p>

<p><span class=Code>&lt;</span><span class=Code
									style="font-weight: bold;"><B>choice</B></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >id=ID</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >maxOccurs=nonNegativeInteger|unbounded</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >minOccurs=nonNegativeInteger</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >any 
 attributes</font></span></p>

<p><span class=Code>&gt;</span></p>

<p class="whs8"><span class=Code
								style="color: #c0c0c0;"><font color=silver >(annotation?,(</font></span><span 
 class=Code>element</span><span class=Code
								style="color: #c0c0c0;"><font color=silver >|</font></span><span class=Code>group</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >|</font></span><span class=Code>choice</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >|</font></span><span class=Code>sequence</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >|any)*)</font></span></p>

<p><span class=Code>&lt;/</span><span class=Code
										style="font-weight: bold;"><B>choice</B></span><span 
 class=Code>&gt;</span></p>

<h3>ComplexContent </h3>

<p>This element defines extensions or restrictions on a complex type.</p>

<p class="whs2"><span class=Code><B>&lt;complexContent</B></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >id=ID</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >mixed=true|false</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >any 
 attributes</font></span></p>

<p class="whs2"><span class=Code><B>&gt;</B></span></p>

<p><span class=Code>(</span><span class=Code
									style="color: #c0c0c0;"><font color=silver >annotation</font></span><span 
 class=Code>?,(restriction|extension))</span></p>

<p class="whs2"><span class=Code><B>&lt;/complexContent&gt;</B></span></p>

<h3>ComplexType</h3>

<p>This element defines a complex type.</p>

<p class="whs2"><span class=Code><B>&lt;complexType</B></span></p>

<p class="whs4"><span class=Code><B>name=</B></span><span 
 class=Code
	style="font-weight: normal; font-style: italic;"><I>NCName</I></span><span 
 class=Code> </span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >id=ID 
 </font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >abstract=true|false 
 </font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >mixed=true|false</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >block=(#all|list 
 of (extension|restriction))</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >final=(#all|list 
 of (extension|restriction))</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >any 
 attributes</font></span></p>

<p class="whs2"><span class=Code><B>&gt;</B></span></p>

<p class="whs8"><span class=Code><font color=silver >(</font></span><span class=Code
															style="color: #c0c0c0;"><font color=silver >annotation</font></span><span 
 class=Code>?,(simpleContent|complexContent|((group</span><span class=Code
	style="color: #c0c0c0;"><font color=silver >|</font></span><span class=Code>all</span><span class=Code
	style="color: #c0c0c0;"><font color=silver >|</font></span><span class=Code>choice|sequence)?,((attribute|attributeGroup)*,</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >anyAttribute</font></span><span class=Code>?))))</span></p>

<p class="whs2"><span class=Code><B>&lt;/complexType&gt;</B></span></p>

<h3>Element</h3>

<p>This element defines an element of the XML file.</p>

<p class=Remarque><span class=RemarqueTitre>Note</span>: The <span class=Code>maxOccurs</span> 
 and <span class=Code>minOccurs</span> attributes of the element are used 
 in the XML-to-SQL mapping. If a child element is of a simple type and 
 <span class=Code>maxOccur=1</span>, then this element is mapped to a simple 
 column in the table corresponding to its parent element. Otherwise, a 
 table linked to the parent element's table is created.</p>

<p class="whs2"><span class=Code><B>&lt;element</B></span></p>

<p class="whs4"><span class=Code><B>name=</B></span><span 
 class=Code
	style="font-weight: normal; font-style: italic;"><I>NCName</I></span></p>

<p class="whs4"><span class=Code><B>maxOccurs=</B></span><span 
 class=Code
	style="font-weight: normal; font-style: italic;"><I>nonNegativeInteger</I></span><span 
 class=Code>|unbounded</span></p>

<p class="whs4"><span class=Code><B>minOccurs=</B></span><span 
 class=Code
	style="font-weight: normal; font-style: italic;"><I>nonNegativeInteger</I></span></p>

<p class="whs4"><span class=Code><B>type=</B></span><span 
 class=Code
	style="font-weight: normal; font-style: italic;"><I>QName</I></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >id=ID 
 </font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >ref=QName</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >substitutionGroup=QName</font></span></p>

<p class="whs9"><span class=Code
									style="color: #c0c0c0;"><font color=silver >default=string</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >fixed=string</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >form=qualified|unqualified</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >nillable=true|false</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >abstract=true|false 
 </font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >block=(#all|list 
 of (extension|restriction))</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >final=(#all|list 
 of (extension|restriction))</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >any 
 attributes</font></span></p>

<p class="whs2"><span class=Code><B>&gt;</B></span></p>

<p><span class=Code
		style="color: #c0c0c0;"><font color=silver >annotation</font></span><span class=Code>?,((simpleType</span><span 
 class=Code
	style="font-weight: bold;"><B>|</B></span><span class=Code>complexType)?,(</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >unique</font></span><span class=Code>|</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >key</font></span><span class=Code>|</span><span class=Code
	style="color: #c0c0c0;"><font color=silver >keyref</font></span><span class=Code>)*))</span></p>

<p class="whs2"><span class=Code><B>&lt;/element&gt;</B></span></p>

<h3>Extension</h3>

<p>This element extends an existing <span class=Code>simpleType</span> 
 or <span class=Code>complexType</span> element</p>

<p><span class=Code>&lt;</span><span class=Code
									style="font-weight: bold;"><B>extension</B></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >id=ID 
 </font></span></p>

<p class="whs7"><span class=Code
									style="font-weight: bold;"><B>base</B></span><span 
 class=Code>=</span><span class=Code
							style="font-style: italic;"><I>QName</I></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >any 
 attributes</font></span></p>

<p><span class=Code>&gt;</span></p>

<p class="whs8"><span class=Code
								style="color: #c0c0c0;"><font color=silver >(annotation?,((</font></span><span 
 class=Code>group</span><span class=Code
								style="color: #c0c0c0;"><font color=silver >|</font></span><span class=Code>all</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >|</font></span><span class=Code>choice</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >|</font></span><span class=Code>sequence</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >)?,((</font></span><span class=Code>attribute</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >|</font></span><span class=Code>attributeGroup</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >)*,anyAttribute?)))</font></span></p>

<p><span class=Code>&lt;/</span><span class=Code
										style="font-weight: bold;"><B>extension</B></span><span 
 class=Code>&gt;</span></p>

<h3>Group</h3>

<p>The group element is used to define a group of elements to be used in 
 complex type definitions.</p>

<p><span class=Code>&lt;</span><span class=Code
									style="font-weight: bold;"><B>group</B></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >id=ID</font></span></p>

<p class="whs7"><span class=Code>name=NCName</span></p>

<p class="whs7"><span class=Code>ref=QName</span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >maxOccurs=nonNegativeInteger|unbounded</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >minOccurs=nonNegativeInteger</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >any 
 attributes</font></span></p>

<p><span class=Code>&gt;</span></p>

<p><span class=Code>(</span><span class=Code
									style="color: #c0c0c0;"><font color=silver >annotation</font></span><span 
 class=Code>?,(all|choice|sequence)?)</span></p>

<p><span class=Code>&lt;/</span><span class=Code
										style="font-weight: bold;"><B>group</B></span><span 
 class=Code>&gt;</span></p>

<h3>Import</h3>

<p>This element is used to add multiple schemas with different target namespace 
 to a document.</p>

<p><span class=Code>&lt;</span><span class=Code
									style="font-weight: bold;"><B>import</B></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >id=ID</font></span></p>

<p class="whs7"><span class=Code>namespace=anyURI</span></p>

<p class="whs7"><span class=Code>schemaLocation=anyURI</span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >any 
 attributes</font></span></p>

<p><span class=Code>&gt;</span></p>

<p class="whs8"><span class=Code
								style="color: #c0c0c0;"><font color=silver >(annotation?)</font></span></p>

<p><span class=Code>&lt;/</span><span class=Code
										style="font-weight: bold;"><B>import</B></span><span 
 class=Code>&gt;</span></p>

<h3>Include</h3>

<p>This element is used to add multiple schemas with the same target namespace 
 to a document.</p>

<p><span class=Code>&lt;</span><span class=Code
									style="font-weight: bold;"><B>include</B></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >id=ID</font></span></p>

<p class="whs7"><span class=Code>schemaLocation=anyURI</span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >any 
 attributes</font></span></p>

<p><span class=Code>&gt;</span></p>

<p class="whs8"><span class=Code
								style="color: #c0c0c0;"><font color=silver >(annotation?)</font></span></p>

<p><span class=Code>&lt;/</span><span class=Code
										style="font-weight: bold;"><B>include</B></span><span 
 class=Code>&gt;</span></p>

<h3>List</h3>

<p>This element defines a simple type element as a list of values of a 
 specified data type.</p>

<p><span class=Code>&lt;</span><span class=Code
									style="font-weight: bold;"><B>list</B></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >id=ID 
 </font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >itemType=QName 
 </font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >any 
 attributes</font></span></p>

<p class="whs8"><span class=Code
								style="color: #c0c0c0;"><font color=silver >&gt;</font></span></p>

<p class="whs8"><span class=Code
								style="color: #c0c0c0;"><font color=silver >(annotation?,(</font></span><span 
 class=Code>simpleType</span><span class=Code
									style="color: #c0c0c0;"><font color=silver >?))</font></span></p>

<p><span class=Code>&lt;/</span><span class=Code
										style="font-weight: bold;"><B>list</B></span><span 
 class=Code>&gt;</span></p>

<h3>Restriction</h3>

<p>This element defines restrictions on a <span class=Code>simpleType</span>, 
 <span class=Code>simpleContent</span>, or a <span class=Code>complexContent.</span></p>

<p><span class=Code>&lt;</span><span class=Code
									style="font-weight: bold;"><B>restriction</B></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >id=ID</font></span></p>

<p class="whs7"><span class=Code
									style="font-weight: bold;"><B>base</B></span><span 
 class=Code>=</span><span class=Code
							style="font-style: italic;"><I>QName</I></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >any 
 attributes</font></span></p>

<p><span class=Code>&gt;</span></p>

<span style="color: #808080;"><font color=gray >Content for </font></span><span class=Code
														style="color: #808080;"><font color=gray >simpleType</font></span><span 
 style="color: #808080;"><font color=gray >: </font></span>

<p class="whs8"><span class=Code
								style="color: #c0c0c0;"><font color=silver >(annotation?,(simpleType?,(minExclusive|minInclusive|maxExclusive|maxInclusive|totalDigits|fractionDigits|length|minLength|maxLength|enumeration|whiteSpace|pattern)*))</font></span></p>

<p class="whs10">Content for <span class=Code
											style="color: #808080;"><font color=gray >simpleContent</font></span>:</p>

<p class="whs8"><span class=Code
								style="color: #c0c0c0;"><font color=silver >(annotation?,(simpleType?,(minExclusive|minInclusive|maxExclusive|maxInclusive|totalDigits|fractionDigits|length|minLength|maxLength|enumeration|whiteSpace|pattern)*)?, 
 ((</font></span><span class=Code>attribute</span><span class=Code
												style="color: #c0c0c0;"><font color=silver >|attributeGroup)*,anyAttribute?))</font></span></p>

<p class="whs10">Content for <span class=Code
											style="color: #808080;"><font color=gray >complexContent</font></span>:</p>

<p class="whs8"><span class=Code
								style="color: #c0c0c0;"><font color=silver >(annotation?,(</font></span><span 
 class=Code>group</span><span class=Code
								style="color: #c0c0c0;"><font color=silver >|</font></span><span class=Code>all</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >|</font></span><span class=Code>choice</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >|</font></span><span class=Code>sequence</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >)?, ((</font></span><span class=Code>attribute</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >|</font></span><span class=Code>attributeGroup</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >)*,anyAttribute?))</font></span></p>

<p><span class=Code>&lt;/</span><span class=Code
										style="font-weight: bold;"><B>restriction</B></span><span 
 class=Code>&gt;</span></p>

<h3>Schema</h3>

<p>This element defines the root element of a schema.</p>

<p><span class=Code>&lt;</span><span class=Code
									style="font-weight: bold;"><B>schema</B></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >id=ID 
 </font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >attributeFormDefault=qualified|unqualified</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >elementFormDefault=qualified|unqualified</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >blockDefault=(#all|list 
 of (extension|restriction|substitution))</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >finalDefault=(#all|list 
 of (extension|restriction|list|union))</font></span></p>

<p class="whs7"><span class=Code
									style="font-weight: bold;"><B>targetNamespace</B></span><span 
 class=Code>=</span><span class=Code
							style="font-style: italic;"><I>anyURI</I></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >version=token</font></span></p>

<p class="whs7"><span class=Code
									style="font-weight: bold;"><B>xmlns</B></span><span 
 class=Code>=</span><span class=Code
							style="font-style: italic;"><I>anyURI</I></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >any 
 attributes</font></span></p>

<p class="whs7"><span class=Code>&gt;</span></p>

<p><span class=Code>((include|import</span><span class=Code
												style="color: #c0c0c0;"><font color=silver >|redefine|annotation</font></span><span 
 class=Code>)*,(((simpleType|complexType|group|attributeGroup)|element|</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >attribute</font></span><span class=Code>|</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >notation</font></span><span class=Code>),</span><span 
 class=Code
	style="color: #c0c0c0;"><font color=silver >annotation</font></span><span class=Code>*)*)</span></p>

<p><span class=Code>&lt;/</span><span class=Code
										style="font-weight: bold;"><B>schema</B></span><span 
 class=Code>&gt;</span></p>

<h3>Sequence</h3>

<p>This element specifies that the child elements must appear in a sequence. 
 Each child element can occur 0 or more times.</p>

<p class="whs2">&lt;<span class=Code>sequence</span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >id=ID</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >maxOccurs=nonNegativeInteger|unbounded</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >minOccurs=nonNegativeInteger</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >any 
 attributes</font></span></p>

<p><span class=Code>&gt;</span></p>

<p><span class=Code>(</span><span class=Code
									style="color: #c0c0c0;"><font color=silver >annotation</font></span><span 
 class=Code>?,(element|group|choice|sequence</span><span class=Code
														style="color: #c0c0c0;"><font color=silver >|any</font></span><span 
 class=Code>)*)</span></p>

<p class="whs2"><span class=Code><B>&lt;/sequence&gt;</B></span></p>

<p class=Remarque><span class=RemarqueTitre>Note</span>: The Sequence order 
 is not managed by the driver. The sequence order should be handled by 
 loading the xxx_ORDER column generated by the driver.</p>

<p class=Remarque><span class=RemarqueTitre>Note</span>: The <span class=Code>maxOccurs</span> 
 and <span class=Code>mixOccurs</span> attributes are not managed by the 
 driver. &nbsp;This 
 should be handled by checks on the data, and by validating the XML contents 
 against the XSD.</p>

<h3>SimpleContent</h3>

<p>This element contains extensions or restrictions on a text-only complex 
 type or on a simple type as content.</p>

<p class="whs2"><span class=Code><B>&lt;simpleContent</B></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >id=ID</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >any 
 attributes</font></span></p>

<p class="whs2"><span class=Code><B>&gt;</B></span></p>

<p><span class=Code>(</span><span class=Code
									style="color: #c0c0c0;"><font color=silver >annotation</font></span><span 
 class=Code>?,(restriction|extension))</span></p>

<p class="whs2"><span class=Code><B>&lt;/simpleContent&gt;</B></span></p>

<h3>SimpleType</h3>

<p>This element defines a simple type element.</p>

<p class="whs2"><span class=Code><B>&lt;simpleType</B></span></p>

<p class="whs4"><span class=Code><B>name=</B></span><span 
 class=Code
	style="font-weight: normal; font-style: italic;"><I>NCName</I></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >id=ID</font></span></p>

<p class="whs3"><span class=Code
													style="color: #c0c0c0;"><font color=silver >any 
 attributes</font></span></p>

<p class="whs2"><span class=Code><B>&gt;</B></span></p>

<p><span class=Code>(</span><span class=Code
									style="color: #c0c0c0;"><font color=silver >annotation</font></span><span 
 class=Code>?,(restriction</span><span class=Code
										style="color: #c0c0c0;"><font color=silver >|</font></span><span 
 class=Code>list</span><span class=Code
							style="color: #c0c0c0;"><font color=silver >|union</font></span><span 
 class=Code>))</span></p>

<p class="whs2"><span class=Code><B>&lt;/simpleType&gt;</B></span></p>

<h2>Unsupported Elements</h2>

<p>The following schema elements are not supported by the XML driver.</p>

<ul type="disc" class="whs1">
	
	<li class=kadov-p><p><span style="font-weight: bold;"><B>Annotation</B></span>: 
 The <span class=Code>annotation</span> is an element for defining comments 
 and inline documentation. This element and all its child elements (<span 
 class=Code>appInfo</span>, <span class=Code>documentation</span>) are 
 ignored.</p></li>
	
	<li class=kadov-p><p><span style="font-weight: bold;"><B>Any/anyAttribute</B></span>: 
 The <span class=Code>any</span> and <span class=Code>anyAttribute</span> 
 elements enables you to extend the XML document with any element or attribute, 
 even if it is not specified by the schema. These elements are not supported.</p></li>
	
	<li class=kadov-p><p><span style="font-weight: bold;"><B>Key/keyRef/Unique</B></span>: 
 These elements allow the definition of constraints in the schema. These 
 elements and their child elements (<span class=Code>selector</span>, <span 
 class=Code>field</span>) are ignored. &nbsp;</p></li>
	
	<li class=kadov-p><p><span style="font-weight: bold;"><B>Union</B></span>: 
 The <span class=Code>union</span> element defines a list of values from 
 specified simple data types. This element is not supported.</p></li>
	
	<li class=kadov-p><p><span style="font-weight: bold;"><B>Redefine</B></span>: 
 The <span class=Code>redefine</span> element redefines simple and complex 
 types, groups, and attribute groups from an external schema. This element 
 is not supported.</p></li>
</ul>

<p class=Remarque><span class=AlertTitre>Warning</span>: Elements and attributes 
 allowed in an XML file due to an <span class=Code>Any</span> or <span 
 class=Code>AnyAttribute</span> clause in the XSD may cause errors when 
 the file is loaded.</p>

</body>
</html>
