<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<head>
<title>Creating and Reverse-Engineering a Model</title>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
<meta name="generator" content="RoboHelp by eHelp Corporation www.ehelp.com">
<link rel="stylesheet" href="../../../include/common_ns.css"><script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='../../../include/common.css'>");}
//-->
</script>
<style type="text/css">
<!--
ol.whs1 { list-style:decimal; }
ul.whs2 { list-style:disc; }
-->
</style><script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute; left:0px; top:0px; z-index:4; visibility:hidden; }
-->
</style><script type="text/javascript" language="javascript1.2" src="../../../whtopic.js"></script>
<script type="text/javascript" language="javascript1.2" src="../../../whutils.js"></script>
<script type="text/javascript" language="javascript" src="../../../whver.js"></script>
<script  type="text/javascript" language="javascript1.2">
    <!--
    var linkedScrollbarStyle = "<link rel='stylesheet' href='../../../wf_topics.css'>";
    if( (!isTopicOnly()) &&(parent.gbFHPureHtml == null) )
    {
        document.write(linkedScrollbarStyle);
    }
    //-->
</script>
</head>
<body><script type="text/javascript" language="javascript1.2">
<!--
if (window.addTocInfo)
{
addTocInfo("User's Guide\nDesigner\nModels\nCreating and Reverse-Engineering a Model");

  addShowButton();
}
if (window.setRelStartPage)
{
setRelStartPage("../../../index.htm");

	sendTopicLoaded();
	autoSync(1);
	sendSyncInfo();
	sendAveInfo();
	sendBgColorInfo();
}
//-->
</script>
<h1>Creating and Reverse-Engineering a Model</h1>

<h2>Create a Model</h2>

<p>A <span class=ElementGUI>Model</span> is a set of datastores corresponding 
 to data structures contained in a Physical Schema. A model is always based 
 on a <span class=ElementGUI>Logical Schema. &nbsp;</span>In 
 a given <span class=ElementGUI>Context</span>, the <span class=ElementGUI>Logical 
 Schema </span>corresponds to a <span class=ElementGUI>Physical Schema</span>. 
 The Data Schema of this Physical Schema contains the physical structure: 
 tables, files, JMS messages, elements from an XML file, that are represented 
 as datastores.</p>

<p class=Remarque><span class=AlertTitre>Important Note </span>: Frequently 
 used technologies have their reverse and model creation methods detailed 
 in the section named <a HREF="../../technos/how_to.htm">Using Oracle Data Integrator 
 with ...</a>. Please refer to this section before proceeding.</p>

<h6>To create a Model:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Connect to <span class=ElementGUI>Designer</span></p></li>
	
	<li class=kadov-p><p>Select <span class=ElementGUI>Models</span> in 
 the tree</p></li>
	
	<li class=kadov-p><p>Right-click then select <span class=ElementGUI>Insert 
 Model</span>.</p></li>
	
	<li class=kadov-p><p>In the <span class=ElementGUI>Definition</span> 
 tab, fill in the <span class=ElementGUI>Name</span> field.</p></li>
	
	<li class=kadov-p><p>In the <span class=ElementGUI>Technology</span> 
 field, select the model's technology.</p></li>
	
	<li class=kadov-p><p>In the <span class=ElementGUI>Logical Schema</span> 
 field, select the Logical Schema on which your model will be based.</p></li>
	
	<li class=kadov-p><p>Go to the <span class=ElementGUI>Reverse </span>tab, 
 and select a <span class=ElementGUI>Context</span> which will be used 
 for the model's reverse-engineering. Click <span class=ElementGUI>Apply.</span></p></li>
</ol>

<p>The model is created, but contains no datastore yet.</p>

<h2>Reverse-engineer a model</h2>

<p>A model is created without any datastores. <span class=ElementGUI>Reverse-engineering</span> 
 a model automatically retrieves data structures to define datastores for 
 the model. There are two different modes:</p>

<ul type="disc" class="whs2">
	
	<li class=kadov-p><p><span class=ElementGUI>Standard </span>reverse-engineering 
 uses standard JDBC features to retrieve the metadata.</p></li>
	
	<li class=kadov-p><p><span class=ElementGUI>Customized</span> reverse-engineering 
 uses a Reverse Knowledge Module (RKM) to retrieve the metadata, using 
 a method defined specifically for the given technology.</p></li>
</ul>

<p class=Remarque><span class=RemarqueTitre>Note:</span> The Customized 
 reverse-engineering is more complete and entirely customizable, but also 
 more complex to run. RKM are provided only for certain technologies.</p>

<h3>Standard Reverse-Engineering</h3>

<h6>To perform a Standard Reverse- Engineering:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Go to the <span class=ElementGUI>Reverse</span> 
 tab of your <span class=ElementGUI>Model</span>.</p></li>
	
	<li class=kadov-p><p>Fill in the following fields:</p></li>
	
	<ul type="disc" class="whs2">
		
		<li class=kadov-p><p><span class=ElementGUI>Standard</span></p></li>
		
		<li class=kadov-p><p><span class=ElementGUI>Context</span>: Context 
 used for the reverse-engineering</p></li>
		
		<li class=kadov-p><p><span class=ElementGUI>Types of objects to 
 reverse-engineer</span>: List of object types that should be taken into 
 account by the reverse-engineering process.</p></li>
	</ul>
	
	<li class=kadov-p><p>Go to the <span class=ElementGUI>Selective Reverse 
 </span>tab.</p></li>
	
	<ul type="disc" class="whs2">
		
		<li class=kadov-p><p>Check the <span class=ElementGUI>Selective 
 Reverse</span>, <span class=ElementGUI>New Datastores</span>, and <span 
 class=ElementGUI>Objects to Reverse</span> boxes</p></li>
	</ul>
	
	<li class=kadov-p><p>A list of datastores to be reverse-engineered 
 appears. Leave those you wish to reverse-engineer checked.</p></li>
	
	<li class=kadov-p><p>Click the <span class=ElementGUI>Reverse</span> 
 button, then on <span class=ElementGUI>Yes</span> to validate the changes.</p></li>
	
	<li class=kadov-p><p>Oracle Data Integrator launches a reverse-engineering 
 process for the selected datastores; &nbsp;A 
 progress bar appears.</p></li>
</ol>

<p>The reverse-engineered datastores appear under the model.</p>

<p>It is possible to refine the reverse-engineer using the options in the 
 <span class=ElementGUI>Reverse</span> and <span class=ElementGUI>Selective 
 Reverse</span> tabs. Refer to <a href="../../../refmanual/designer/model/snpmodel.htm">Model</a> 
 for more information.</p>

<h3>Customized Reverse-Engineering</h3>

<h6>To perform a Customized Reverse-Engineering using a RKM:</h6>

<p class=Remarque><span class=AlertTitre>Warning !</span> Using a RKM requires 
 the import of this RKM into a project. Only the imported RKM are available 
 for reverse operations.</p>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Go to the <span class=ElementGUI>Reverse</span> 
 tab of the <span class=ElementGUI>Model</span>.</p></li>
	
	<li class=kadov-p><p>Fill in the following fields:</p></li>
	
	<ul type="disc" class="whs2">
		
		<li class=kadov-p><p><span class=ElementGUI>Customized</span></p></li>
		
		<li class=kadov-p><p><span class=ElementGUI>Context</span>: Context 
 used for the reverse-engineering</p></li>
		
		<li class=kadov-p><p><span class=ElementGUI>Object Type</span>: 
 Type of the objects to reverse-engineer (tables, view...)</p></li>
		
		<li class=kadov-p><p><span class=ElementGUI>Mask:</span> %</p></li>
		
		<li class=kadov-p><p><span class=ElementGUI>Select the KM: </span><span 
 class=Code>RKM &lt;technology&gt;.&lt;name of the importation project&gt;</span></p></li>
	</ul>
</ol>

<ol start="3" type="1" class="whs1">
	
	<li class=kadov-p><p>Click the <span class=ElementGUI>Reverse</span> 
 button, then <span class=ElementGUI>Yes</span> to validate the changes.</p></li>
	
	<li class=kadov-p><p>Click <span class=ElementGUI>OK</span></p></li>
	
	<li class=kadov-p><p>The <span class=ElementGUI>Session started </span>window 
 appears. Click <span class=ElementGUI>OK</span></p></li>
</ol>

<p>Follow and validate your model's reverse-engineering operations in the 
 Oracle Data Integrator Log. If it finished correctly, the reversed datastores 
 appear under the reversed module in the tree. It is possible to refine 
 the reverse-engineer using the options of the <span class=ElementGUI>Reverse</span> 
 and <span class=ElementGUI>Selective Reverse</span> tabs. Refer to <a href="../../../refmanual/designer/model/snpmodel.htm">Model</a> for more 
 information. Also see the RKM description for more information.</p>

</body>
</html>
