<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<head>
<title>Creating an Interface</title>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
<meta name="generator" content="RoboHelp by eHelp Corporation www.ehelp.com">
<link rel="stylesheet" href="../../../../include/common_ns.css"><script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='../../../../include/common.css'>");}
//-->
</script>
<style type="text/css">
<!--
ol.whs1 { list-style:decimal; }
img_whs2 { border:none; width:16px; height:16px; float:none; border-style:none; }
img_whs3 { border:none; width:19px; height:19px; float:none; border-style:none; }
-->
</style><script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute; left:0px; top:0px; z-index:4; visibility:hidden; }
-->
</style><script type="text/javascript" language="javascript1.2" src="../../../../whtopic.js"></script>
<script type="text/javascript" language="javascript1.2" src="../../../../whutils.js"></script>
<script type="text/javascript" language="javascript" src="../../../../whver.js"></script>
<script  type="text/javascript" language="javascript1.2">
    <!--
    var linkedScrollbarStyle = "<link rel='stylesheet' href='../../../../wf_topics.css'>";
    if( (!isTopicOnly()) &&(parent.gbFHPureHtml == null) )
    {
        document.write(linkedScrollbarStyle);
    }
    //-->
</script>
</head>
<body><script type="text/javascript" language="javascript1.2">
<!--
if (window.addTocInfo)
{
addTocInfo("User's Guide\nDesigner\nProjects\nCreating Interfaces\nCreating an Interface");
addTocInfo("User's Guide\nDesigner\nProjects\nCreating Interfaces\n1 - Create a New Interface");
addTocInfo("User's Guide\nDesigner\nProjects\nCreating Interfaces\n2 - Define the Target Datastore");
addTocInfo("User's Guide\nDesigner\nProjects\nCreating Interfaces\n3 - Define the Source Datastores");
addTocInfo("User's Guide\nDesigner\nProjects\nCreating Interfaces\n4 - Define the Mappings");
addTocInfo("User's Guide\nDesigner\nProjects\nCreating Interfaces\n5 - Define the Interface Flow");
addTocInfo("User's Guide\nDesigner\nProjects\nCreating Interfaces\n6 - Set up Flow Control");
addTocInfo("User's Guide\nDesigner\nProjects\nCreating Interfaces\n7 - Execute the Interface");

  addShowButton();
}
if (window.setRelStartPage)
{
setRelStartPage("../../../../index.htm");

	sendTopicLoaded();
	autoSync(1);
	sendSyncInfo();
	sendAveInfo();
	sendBgColorInfo();
}
//-->
</script>
<h1>Creating an Interface</h1>

<p>The following operations must be performed to create an interface:</p>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p><a href="create_interface.htm#Create a New Interface">Create 
 a New Interface</a>.</p></li>
	
	<li class=kadov-p><p><a href="create_interface.htm#Define the Target Datastore">Define 
 the Target Datastore</a>.</p></li>
	
	<li class=kadov-p><p><a href="create_interface.htm#Define the Source Datastores">Define 
 the source datastores</a>, filters and joins on these sources.</p></li>
	
	<li class=kadov-p><p><a href="create_interface.htm#Define the mapping">Define 
 the mapping</a> between source and target data.</p></li>
	
	<li class=kadov-p><p><a href="create_interface.htm#Define the interface flow">Define 
 the interface flow</a>.</p></li>
	
	<li class=kadov-p><p><a href="create_interface.htm#Define the flow control">Define 
 the flow control</a>.</p></li>
	
	<li class=kadov-p
		class=kadov-p><a href="create_interface.htm#Execute the interface">Execute 
 the interface</a> for testing.</li>
</ol>

<h2><a name="Create a New Interface"></a>1. Create a New Interface</h2>

<h6>To create a new interface:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>In the Designer tree, select the <span class=ElementGUI>Interfaces</span> 
 node in the <span class=ElementGUI>folder</span> under the <span class=ElementGUI>project</span> 
 where you want to create the interface. Right click and select <span class=ElementGUI>insert 
 interface</span>. A blank interface appears in the right panel of the 
 Designer window.</p></li>
	
	<li class=kadov-p><p>Fill in the interface <span class=ElementGUI>Name.</span></p></li>
	
	<li class=kadov-p><p>Check the <span class=ElementGUI>Staging Area 
 different from Target </span>box if necessary and select a logical schema 
 that will be the staging area.</p></li>
</ol>

<p class=Remarque><span class=RemarqueTitre>Note:</span> The staging area 
 defaults to the target. It may be necessary to put it on a different logical 
 schema if the target does not have the required transformation capabilities 
 for the interface. This is the case for File, JMS, ... logical schemas. 
 It is also necessary to define a staging area for interfaces with a temporary 
 target datastore.</p>

<ol start="4" type="1" class="whs1">
	
	<li class=kadov-p><p>Go to the <span class=ElementGUI>Diagram tab </span>to 
 proceed.</p></li>
</ol>

<h2><a name="Define the Target Datastore"></a>2. Define the Target Datastore</h2>

<p>The target datastore is the element that will be loaded by the interface. 
 This datastore may be permanent (defined in a model) or temporary (created 
 by the interface in the staging area).</p>

<h3><span class=ElementGUI>2.1 Permanent Target Datastore</span></h3>

<h6>To insert the permanent target datastore in an interface:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Expand the tree to show the <span class=ElementGUI>datastore</span> 
 to be inserted as the target.</p></li>
	
	<li class=kadov-p><p>Select the <span class=ElementGUI>datastore</span>, 
 then drag and drop it as the target of the interface (in the right part 
 of the diagram tab). The target datastore appears in the diagram.</p></li>
</ol>

<h6>To display the data of the permanent target datastore of an interface:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Right click the title of the target datastore 
 in the <span class=ElementGUI>diagram</span> tab of the <span class=ElementGUI>interface</span> 
 window.</p></li>
	
	<li class=kadov-p><p>Select <span class=ElementGUI>data</span>. </p></li>
</ol>

<p>A window containing the data of the target datastore appears. Data in 
 a temporary target datastore cannot be displayed since this datastore 
 is created by the interface.</p>

<h3><span class=ElementGUI>2.2 Temporary Target Datastore</span></h3>

<h6>To add a temporary target datastore:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>In the <span class=ElementGUI>Diagram</span> tab, 
 double-click the title of the target datastore: <span class=ElementGUI>Untitled.</span></p></li>
	
	<li class=kadov-p><p>In the property pane, type in a <span class=ElementGUI>name</span> 
 for this datastore. Specify if you wish to create the temporary datastore 
 in the <span class=ElementGUI>Work Schema </span>or <span class=ElementGUI>Data 
 Schema</span> of the staging area.</p></li>
</ol>

<p class=Remarque><span class=ElementGUI>Note:</span> You can define a 
 temporary target datastore only if the staging area is different from 
 the target.</p>

<p class=Remarque><span class=RemarqueTitre>Note:</span> The temporary 
 target datastore will be created only if you activate the KM option <span 
 class=Code>CREATE_TARGET_TABLE 
 </span>when defining the flow.</p>

<p>The temporary target datastore is created without columns. They must 
 be added to define its structure.</p>

<h6>To add a column to a temporary target datastore:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Right click the title of the target datastore.</p></li>
	
	<li class=kadov-p><p>Select <span class=ElementGUI>Add a column</span>. 
 </p></li>
	
	<li class=kadov-p><p>A new empty column appears. Double click this 
 new column in the target and fill in the <span class=ElementGUI>target 
 column</span> fields (See <a HREF="../../../../refmanual/designer/project/folder/interface/pop_mapping.htm">Mapping</a>).</p></li>
</ol>

<h6>To delete a column from a temporary target datastore:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Right click the <span class=ElementGUI>column</span> 
 to be deleted from the target datastore.</p></li>
	
	<li class=kadov-p><p>Select <span class=ElementGUI>Delete</span>. </p></li>
</ol>

<h6>To add all of the columns from a source datastore to a temporary target 
 datastore:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Add the source <span class=ElementGUI>datastore.</span></p></li>
	
	<li class=kadov-p><p>Select the title of the <span class=ElementGUI>entity</span> 
 representing the source datastore.</p></li>
	
	<li class=kadov-p><p>Right click and select <span class=ElementGUI>Add 
 to the target</span>.</p></li>
</ol>

<h3>2.3 Define the update key</h3>

<p>If you want to use update or flow control features in your interface, 
 it may be necessary to define an update key on the target datastore. This 
 key identifies each record to update or check before insertion into the 
 target. This key can be a unique key defined on the target datastore in 
 its model, or a group of columns specified as a key for the interface.</p>

<h6>To define the update key from a unique key:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>In the <span class=ElementGUI>Diagram </span>tab, 
 double-click the title of the target datastore.</p></li>
	
	<li class=kadov-p><p>In the property panel, select the <span class=ElementGUI>Update 
 key</span> from the list.</p></li>
</ol>

<p class=Remarque><span class=RemarqueTitre>Note</span>: Only keys defined 
 in the model appear in this list.</p>

<h6>To define the update key from the columns:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>In the <span class=ElementGUI>Diagram </span>tab, 
 double-click one of the target datastore's columns that is part of the 
 update key.</p></li>
	
	<li class=kadov-p><p>In the properties panel, check the <span class=ElementGUI>key</span> 
 box. A key symbol appears in front of the column in the mapping.</p></li>
	
	<li class=kadov-p><p>Repeat the operation for each column that making 
 up the update key.</p></li>
</ol>

<h2><a name="Define the Source Datastores"></a>3. Define the Source Datastores</h2>

<p>The source datastores contain data used to load the target datastore. 
 Two types of datastores can be used as an interface source: The datastores 
 from the models and temporary datastores target of an interface.</p>

<p>The source datastores of an interface can be filtered during the loading 
 process and must be put in relation through joins. Joins and filters can 
 be recovered from the model definitions and can also be defined for the 
 interface.</p>

<h3>3.1 Define the <span class=ElementGUI>Source Datastores</span></h3>

<h6>To add a permanent-type source datastore to an interface:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Select the <span class=ElementGUI>datastore</span> 
 then drag and drop it onto the composition panel (left part of the diagram 
 tab). The datastore appears in the diagram model. </p></li>
</ol>

<p class=Remarque><span class=AlertTitre>Warning</span>: If there are any 
 filters on the datastore, or references between this datastore and existing 
 datastores in the diagram, they appear along with the datastore. These 
 references and filters are copied as joins and filters in the interface. 
 They are not links to existing references and filters from the model. 
 Therefore, modifying a reference or a filter in a model does not affect 
 the join or filter in the interface, and vice versa.</p>

<p class=Remarque><span class=RemarqueTitre>Using journalized datastores</span>: 
 If the datastore is journalized, it is possible to use only the journalized 
 data in the interface flow. Check the <span class=ElementGUI>Journalized 
 Data only</span> box in the source datastore properties. A Journalizing 
 filter is automatically created in the diagram.</p>

<h6>To add a temporary-type source datastore to an interface:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Select the <span class=ElementGUI>interface</span>, 
 then drag and drop it onto the composition panel (left part of the diagram 
 tab). The target datastore of this interface appears in the diagram model.</p></li>
</ol>

<h6>To delete a source datastore from an interface:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Right click the title of the <span class=ElementGUI>entity</span> 
 (table) representing the source datastore. </p></li>
	
	<li class=kadov-p><p>Select <span class=ElementGUI>Delete</span>. A 
 confirmation window appears. Select <span class=ElementGUI>Yes</span>.</p></li>
</ol>

<p>The source datastore disappears, along with the associated filters and 
 joins.</p>

<h6>To display the data or the number for rows of a source datastore of 
 an interface:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Right click the title of the <span class=ElementGUI>entity</span> 
 (table) that represents the source datastore.</p></li>
	
	<li class=kadov-p><p>Select <span class=ElementGUI>Number of rows</span> 
 or <span class=ElementGUI>data</span>. </p></li>
</ol>

<p>A window containing the number or rows or the data of the source datastore 
 appears.</p>

<h3>3.2 Define Filters on the sources</h3>

<h6>To define a filter on a source datastore:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Select a column in the entity representing the 
 first table to join, and, holding it selected, drag and drop it onto the 
 composition panel. A <span class=ElementGUI>filter</span> appears in the 
 model.</p></li>
	
	<li class=kadov-p><p>Modify the <span class=ElementGUI>implementation</span> 
 to create the required filter. You may call the expression editor by clicking 
 <img src="../../../../images/exp_edit.gif" x-maintain-ratio="TRUE" width="16px" height="16px" border="0" class="img_whs2"></p></li>
	
	<li class=kadov-p><p>Select the execution location: <span class=ElementGUI>source</span> 
 or <span class=ElementGUI>staging area</span>.</p></li>
	
	<li class=kadov-p><p>Click <img src="../../../../images/exp_check.gif" x-maintain-ratio="TRUE" width="16px" height="16px" border="0" class="img_whs2"> to validate the expression, 
 then click <img src="../../../../images/validate.gif" x-maintain-ratio="TRUE" width="19px" height="19px" border="0" class="img_whs3"> to save.</p></li>
	
	<li class=kadov-p><p>Check the <span class=ElementGUI>Active Filter</span> 
 box to define whether of not &nbsp;you 
 want this filter to be used for the execution of the interface.</p></li>
</ol>

<h6>To delete a filter on a source datastore of an interface:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Select the <span class=ElementGUI>filter</span> 
 to remove.</p></li>
	
	<li class=kadov-p><p>Right click and select <span class=ElementGUI>Delete</span>.</p></li>
</ol>

<h6>To display the data or the number of rows resulting from a filter:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Right click the <span class=ElementGUI>filter</span>.</p></li>
	
	<li class=kadov-p><p>Select <span class=ElementGUI>data</span> or <span 
 class=ElementGUI>number of rows.</span></p></li>
</ol>

<p>A window containing the data or the number of rows after the filter 
 appears.</p>

<h3>3.3 Define Joins between sources</h3>

<h6>To create a join between the source datastores of an interface:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Select a column in the entity representing the 
 first table to join, and, holding it selected, drag and drop it on a column 
 in the entity of the second table to join.</p></li>
	
	<li class=kadov-p><p>A <span class=ElementGUI>relation</span> linking 
 the two tables appears in the model. In the <span class=ElementGUI>implementation</span> 
 field, an equality between the two columns concerned also appears.</p></li>
	
	<li class=kadov-p><p>Modify the <span class=ElementGUI>implementation</span> 
 to create the required relation. The columns of all the tables in the 
 model can be drag-and-dropped into the join text to create multi-table 
 joins. You may call the expression editor by clicking <img src="../../../../images/exp_edit.gif" x-maintain-ratio="TRUE" width="16px" height="16px" border="0" class="img_whs2">.</p></li>
	
	<li class=kadov-p><p>Click <img src="../../../../images/exp_check.gif" x-maintain-ratio="TRUE" width="16px" height="16px" border="0" class="img_whs2"> to validate the expression, 
 then click <img src="../../../../images/validate.gif" x-maintain-ratio="TRUE" width="19px" height="19px" border="0" class="img_whs3"> to save.</p></li>
	
	<li class=kadov-p><p>Select the execution location: <span class=ElementGUI>source</span> 
 or <span class=ElementGUI>staging area.</span></p></li>
	
	<li class=kadov-p><p>Select the type of join (right/left, inner/outer, 
 ISO), and the order number.</p></li>
	
	<li class=kadov-p><p>Check the <span class=ElementGUI>Active Clause 
 </span>box to define whether of not &nbsp;you 
 want this join be used for the execution of the interface.</p></li>
</ol>

<h6>To delete a join between source datastores of an interface:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Right click the <span class=ElementGUI>relation</span> 
 that represents the join to remove.</p></li>
	
	<li class=kadov-p><p>Select <span class=ElementGUI>Delete</span>.</p></li>
</ol>

<h6>To display the data or the number of rows resulting from a join:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Right click the <span class=ElementGUI>relation</span> 
 representing the join.</p></li>
	
	<li class=kadov-p><p>Select <span class=ElementGUI>data</span> or <span 
 class=ElementGUI>number of rows.</span></p></li>
</ol>

<p>A window containing the data or the number of rows resulting from the 
 join appears.</p>

<h2><a name="Define the mapping"></a>4. Define the mappings</h2>

<p>The mapping defines the transformation rules on the sources, allowing 
 the to generation of data to load the target.</p>

<p>The mapping is filled automatically at each new source or target insertion 
 using column names matching. The user-defined mapping always takes precedence 
 over name matching.</p>

<h6>To regenerate the automatic mapping by name matching:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Right click the <span class=ElementGUI>target 
 datastore</span>.</p></li>
	
	<li class=kadov-p><p>Select <span class=ElementGUI>Redo Automatic Mapping</span>. 
 </p></li>
</ol>

<p>The target datastore columns are automatically mapped on the source 
 datastores' columns with the closest name.</p>

<h6>To define the mapping of a target column:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>Double click the column of the target datastore.</p></li>
	
	<li class=kadov-p><p>Modify the <span class=ElementGUI>implementation</span> 
 in the composition panel to perform the required transformation. The columns 
 of all the tables in the model can be drag-and-dropped into the text. 
 You may call the expression editor by clicking <img src="../../../../images/exp_edit.gif" x-maintain-ratio="TRUE" width="16px" height="16px" border="0" class="img_whs2">.</p></li>
	
	<li class=kadov-p><p>Click <img src="../../../../images/exp_check.gif" x-maintain-ratio="TRUE" width="16px" height="16px" border="0" class="img_whs2"> to validate the expression, 
 then click <img src="../../../../images/validate.gif" x-maintain-ratio="TRUE" width="19px" height="19px" border="0" class="img_whs3"> to save.</p></li>
	
	<li class=kadov-p><p>Select the execution location: <span class=ElementGUI>source, 
 target</span> or <span class=ElementGUI>staging area</span>. See <a href="../../../../refmanual/designer/project/folder/interface/pop_mapping.htm">Mappings</a> 
 in the Reference Manual for restrictions on the possible execution locations.</p></li>
	
	<li class=kadov-p
		class=kadov-p>Check the boxes from the <span class=ElementGUI>update</span> 
 zone if you want the mapping to be executed in <span class=ElementGUI>Insert</span> 
 or <span class=ElementGUI>Update</span> operations or in KM-specific operations 
 (<span class=ElementGUI>UD1</span> to <span class=ElementGUI>UD5</span>)</li>
	
	<li class=kadov-p><p>Check the <span class=ElementGUI>Active Mapping 
 </span>box to define whether of not &nbsp;you 
 want this mapping to be used for the execution of the interface.</p></li>
</ol>

<h2><a name="Define the interface flow"></a>5. Define the interface flow</h2>

<p>In the <span class=ElementGUI>flow</span> tab, you define the loading 
 and integration strategies for mapped data. Oracle Data Integrator automatically 
 computes a group of source-sets depending on the mapping rules, joins 
 and filters of the interface's <span class=ElementGUI>diagram</span>. 
 It proposes default KMs for the data flow. The flow tab enables you to 
 view the source-sets and the KMs used to load and integrate data. If you 
 want to define the strategies for the flow, you must change the KMs in 
 use.</p>

<h6>To change the KMs in use:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>In the interface's flow tab, select a <span class=ElementGUI>source-set</span> 
 by clicking its title.</p></li>
	
	<li class=kadov-p><p>In the properties panel, select a <span class=ElementGUI>LKM</span> 
 or <span class=ElementGUI>IKM</span> depending on the strategy to set. 
 For more information on the KM choices, refer to the KM documentation.</p></li>
	
	<li class=kadov-p><p>Set the KM <span class=ElementGUI>Options</span>.</p></li>
	
	<li class=kadov-p><p>Repeat the operation for all source-sets, then 
 click on <span class=ElementGUI>Apply</span>.</p></li>
</ol>

<p class=Remarque><span class=RemarqueTitre>Note:</span> Only KMs that 
 are relevant for the technologies in use and that are imported into the 
 project appear in the list of KMs.</p>

<p class=Remarque><span class=RemarqueTitre>Note:</span> Some IKM require 
 the use of an update key.</p>

<p class=Remarque><span class=RemarqueTitre>Note</span>: When changing 
 from one KM to another, any options of the same type and the same name 
 are preserved.</p>

<h2><a name="Define the flow control"></a>6. Set up flow control</h2>

<p>The flow control strategy enables you to define the method used to check 
 the flow before insertion into the target. The control strategy is defined 
 by a CKM.</p>

<h6>To define the CKM used in an interface:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>In the <span class=ElementGUI>Control </span>tab 
 of the interface, select a <span class=ElementGUI>CKM</span>. For more 
 information on the KM Choice, refer to the KM documentation.</p></li>
	
	<li class=kadov-p><p>Set the KM <span class=ElementGUI>Options.</span></p></li>
	
	<li class=kadov-p><p>Select the <span class=ElementGUI>constraints</span> 
 to be checked.</p></li>
	
	<li class=kadov-p><p>Fill in the <span class=ElementGUI>Maximum number 
 of errors allowed </span>and check the <span class=ElementGUI>%</span> 
 box if you want the interface to fail when a number (or percentage) of 
 errors is reached.</p></li>
	
	<li class=kadov-p><p>Click <span class=ElementGUI>Apply.</span></p></li>
</ol>

<p class=Remarque><span class=RemarqueTitre>Note:</span>Only CKM that are 
 relevant for the technologies in use and that are imported into the project 
 appear in the CKM lists.</p>

<p class=Remarque><span class=RemarqueTitre>Note:</span> Some CKM require 
 the use of an update key.</p>

<p class=Remarque><span class=RemarqueTitre>Note</span>: Only the constraints 
 declared on the target datastore in its model appear in the constraints 
 list.</p>

<p class=Remarque><span class=AlertTitre>Warning</span>: Flow control will 
 be executed only if &nbsp;the 
 <span class=Code>FLOW_CONTROL</span> 
 option is activated in the IKM (<span class=ElementGUI>Flow</span> tab).</p>

<h2><a name="Execute the interface"></a>7. Execute the interface</h2>

<p>Once the interface is created, it is possible to test it.</p>

<h6>To run an interface:</h6>

<ol type="1" class="whs1">
	
	<li class=kadov-p><p>In the interface's <span class=ElementGUI>Execution 
 </span>tab, click <span class=ElementGUI>Execute</span>.</p></li>
	
	<li class=kadov-p><p>If you have not saved your interface yet, then 
 click <span class=ElementGUI>Yes</span> when asked to save it.</p></li>
	
	<li class=kadov-p><p>Define the <span class=ElementGUI><a HREF="../../../../refmanual/designer/project/folder/interface/pop_execute.htm">Execution 
 options</a></span>, then click <span class=ElementGUI>OK</span>.</p></li>
</ol>

</body>
</html>
