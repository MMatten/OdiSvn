<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<head>
<title>Interfaces for Data Integration</title>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
<meta name="generator" content="RoboHelp by eHelp Corporation www.ehelp.com">
<link rel="stylesheet" href="../../include/common_ns.css"><script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='../../include/common.css'>");}
//-->
</script>
<style type="text/css">
<!--
ul.whs1 { list-style:disc; }
p.whs2 { font-weight:bold; }
th.whs3 { x-cell-content-align:top; }
td.whs4 { x-cell-content-align:top; }
ol.whs5 { list-style:decimal; }
img_whs6 { border:none; width:281px; height:265px; float:none; border-style:none; }
img_whs7 { border:none; width:139px; height:95px; float:none; border-style:none; }
img_whs8 { border:none; float:none; border-style:none; width:310px; height:152px; }
img_whs9 { border:none; float:none; border-style:none; width:562px; height:486px; }
img_whs10 { border:none; width:502px; height:199px; float:none; border-style:none; }
img_whs11 { border:none; width:724px; height:307px; float:none; border-style:none; }
img_whs12 { border:none; float:none; border-style:none; width:354px; height:137px; }
img_whs13 { border:none; width:447px; height:154px; float:none; border-style:none; }
img_whs14 { border:none; width:475px; height:240px; float:none; border-style:none; }
img_whs15 { border:none; width:16px; height:16px; float:none; border-style:none; }
img_whs16 { border:none; width:612px; height:70px; float:none; border-style:none; }
img_whs17 { border:none; width:286px; height:126px; float:none; border-style:none; }
img_whs18 { border:none; width:656px; height:71px; float:none; border-style:none; }
img_whs19 { border:none; width:347px; height:161px; float:none; border-style:none; }
img_whs20 { border:none; width:11px; height:11px; float:none; border-style:none; }
p.whs21 { margin-left:0px; }
img_whs22 { border:none; float:none; width:543px; height:274px; border-style:none; }
img_whs23 { border:none; width:610px; height:336px; float:none; border-style:none; }
img_whs24 { border:none; width:503px; height:289px; float:none; border-style:none; }
img_whs25 { border:none; width:322px; height:131px; float:none; border-style:none; }
p.whs26 { font-weight:normal; }
img_whs27 { border:none; width:333px; height:108px; float:none; border-style:none; }
img_whs28 { border:none; width:296px; height:41px; float:none; border-style:none; }
img_whs29 { border:none; width:665px; height:207px; float:none; border-style:none; }
img_whs30 { border:none; width:550px; height:399px; float:none; border-style:none; }
img_whs31 { border:none; width:665px; height:500px; float:none; border-style:none; }
img_whs32 { border:none; width:295px; height:42px; float:none; border-style:none; }
p.whs33 { text-align:right; x-condition:PRINT_EXCLUDE; }
-->
</style><script type="text/javascript" language="JavaScript">
<!--
if ((navigator.appName == "Netscape") && (parseInt(navigator.appVersion) == 4))
{
  var strNSS = "<style type='text/css'>";
  strNSS += "p.whs21 {margin-left:1pt; }";
  strNSS +="</style>";
  document.write(strNSS);
}
//-->
</script>
<script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute; left:0px; top:0px; z-index:4; visibility:hidden; }
-->
</style><script type="text/javascript" language="javascript1.2" src="../../whtopic.js"></script>
<script type="text/javascript" language="javascript1.2" src="../../whutils.js"></script>
<script type="text/javascript" language="javascript" src="../../whver.js"></script>
<script  type="text/javascript" language="javascript1.2">
    <!--
    var linkedScrollbarStyle = "<link rel='stylesheet' href='../../wf_topics.css'>";
    if( (!isTopicOnly()) &&(parent.gbFHPureHtml == null) )
    {
        document.write(linkedScrollbarStyle);
    }
    //-->
</script>
</head>
<body><script type="text/javascript" language="javascript1.2">
<!--
if (window.addTocInfo)
{
addTocInfo("Getting Started with an ETL Project\nInterfaces for Data Integration\n\"Pop. TRG_CUSTOMER\" Interface");

  addShowButton();
}
if (window.setRelStartPage)
{
setRelStartPage("../../index.htm");

	sendTopicLoaded();
	autoSync(1);
	sendSyncInfo();
	sendAveInfo();
	sendBgColorInfo();
}
//-->
</script>
<h1>Interfaces for Data Integration</h1>

<h2>&quot;Pop. TRG_CUSTOMER&quot; Interface</h2>

<h3>Purpose</h3>

<p>The purpose of our first interface is to load the data from the &quot;SRC_CUSTOMER&quot; 
 table in the &quot;Orders Application - HSQL&quot; model into the &quot;TRG_CUSTOMER&quot; 
 target table in the &quot;Sales Administration - HSQL&quot; model.</p>

<p>However, the &quot;SRC_CUSTOMER&quot; table does not contain all of 
 the data that is required for this operation. &nbsp;We 
 wish to add the following information to the target table:</p>

<ul type="disc" class="whs1">
	
	<li class=kadov-p><p>The age range (&quot;AGE_RANGE&quot;) – as defined 
 in the &quot;SRC_AGE_GROUP&quot; flat file – that corresponds to the AGE 
 attribute in the source table</p></li>
	
	<li class=kadov-p><p>The last and first names of the customer sales 
 rep. (&quot;LAST_NAME&quot; and &quot;FIRST_NAME&quot;) – as defined in 
 the &quot;SRC_SALES_PERSON&quot; file – corresponding to the sales rep. 
 number (&quot;SALES_PERS_ID&quot;) in the source table</p></li>
	
	<li class=kadov-p><p>The transformed value of the numeric data (0, 
 1, 2) from the &quot;DEAR&quot; column in the source table into an standard 
 salutation text string in the target (Mr, Mrs, or Ms)</p></li>
	
	<li class=kadov-p><p>The concatenated first and last names of the source 
 customers</p></li>
</ul>

<p>&nbsp;</p>

<p>The source data is not always consistent with the integrity rules implemented 
 in the target environment. &nbsp;For 
 this transformation, we wish to cleanse the data by verifying that all 
 of the constraints are satisfied and by storing invalid rows in an error 
 table rather that in our target database. &nbsp;In 
 our case, two important integrity rules must be satisfied:</p>

<ul type="disc" class="whs1">
	
	<li class=kadov-p><p>Customers must be older than 21 (condition &quot;AGE 
 &gt; 21&quot;)</p></li>
	
	<li class=kadov-p><p>The customers must be associated with a city (&quot;CITY_ID&quot;) 
 that exists in the &quot;TRG_CITY&quot; table (reference &quot;FK_CUST_CITY&quot;)</p></li>
</ul>

<p>&nbsp;</p>

<p>The functional details for these rules and the procedure to follow are 
 given below.</p>

<h3>Defining the Interface</h3>

<p>The following is an overview of the data that we will be using in this 
 transformation.</p>

<h4>Target Datastore</h4>

<p class="whs2">Model:<span style="font-weight: normal;"> 
 Sales Administration - HSQL</span></p>

<p class="whs2">Datastore:<span style="font-weight: normal;"> 
 TRG_CUSTOMER</span></p>

<h4>Source Datastores</h4>

<table x-use-null-cells>

<tr>
<th valign="top" class="whs3">
<p class=TitreTableau>Model</th>
<th valign="top" class="whs3">
<p class=TitreTableau>Datastore</th>
<th valign="top" class="whs3">
<p class=TitreTableau>Description</th>
<th valign="top" class="whs3">
<p class=TitreTableau>Type</th></tr>

<tr>
<td valign="top" class="whs4">
<p class=TexteTableau>Orders Application - HSQL</td>
<td valign="top" class="whs4">
<p class=TexteTableau>SRC_CUSTOMER</td>
<td valign="top" class="whs4">
<p class=TexteTableau>Customers in the source system</td>
<td valign="top" class="whs4">
<p class=TexteTableau>HSQL table</td></tr>

<tr>
<td valign="top" class="whs4">
<p class=TexteTableau>Parameters - FILE</td>
<td valign="top" class="whs4">
<p class=TexteTableau>SRC_AGE_GROUP</td>
<td valign="top" class="whs4">
<p class=TexteTableau>Age bracket file</td>
<td valign="top" class="whs4">
<p class=TexteTableau>File delimited by semicolons</td></tr>

<tr>
<td valign="top" class="whs4">
<p class=TexteTableau>Parameters - FILE</td>
<td valign="top" class="whs4">
<p class=TexteTableau>SRC_SALES_PERSON</td>
<td valign="top" class="whs4">
<p class=TexteTableau>Salesperson file</td>
<td valign="top" class="whs4">
<p class=TexteTableau>File of fixed-size records</td></tr>
</table>

<h3>Joins</h3>

<table x-use-null-cells>

<tr>
<th valign="top" class="whs3">
<p class=TitreTableau>Join</th>
<th valign="top" class="whs3">
<p class=TitreTableau>Description</th>
<th valign="top" class="whs3">
<p class=TitreTableau>SQL rule</th>
<th valign="top" class="whs3">
<p class=TitreTableau>Execution Location</th></tr>

<tr>
<td valign="top" class="whs4">
<p class=TexteTableau>Sales Representatives and Customers</td>
<td valign="top" class="whs4">
<p class=TexteTableau>Join SRC_SALES_PERSON and SRC_CUSTOMER</td>
<td valign="top" class="whs4">
<p class=TexteTableau><span class=Code>SRC_CUSTOMER.SALES_PERS_ID = SRC_SALES_PERSON.SALES_PERS_ID</span></td>
<td valign="top" class="whs4">
<p class=TexteTableau>Staging area</td></tr>

<tr>
<td valign="top" class="whs4">
<p class=TexteTableau>Customers and age brackets</td>
<td valign="top" class="whs4">
<p class=TexteTableau>The customer's age must between the minimum and maximum 
 ages in the file</td>
<td valign="top" class="whs4">
<p class=TexteTableau><span class=Code>SRC_CUSTOMER.AGE between SRC_AGE_GROUP.AGE_MIN 
 and SRC_AGE_GROUP.AGE_MAX</span></td>
<td valign="top" class="whs4">
<p class=TexteTableau>Staging area</td></tr>
</table>

<h3>Transformation rules</h3>

<table x-use-null-cells>

<tr>
<th valign="top" class="whs3">
<p class=TitreTableau>Target column</th>
<th valign="top" class="whs3">
<p class=TitreTableau>Origin</th>
<th valign="top" class="whs3">
<p class=TitreTableau>SQL rule</th>
<th valign="top" class="whs3">
<p class=TitreTableau>Execution location</th></tr>

<tr>
<td valign="top" class="whs4">
<p class=TexteTableau>CUST_ID</td>
<td valign="top" class="whs4">
<p class=TexteTableau>SRC_CUSTOMER.CUSTID</td>
<td valign="top" class="whs4">
<p class=TexteTableau><span class=Code>SRC_CUSTOMER.CUSTID</span></td>
<td valign="top" class="whs4">
<p class=TexteTableau>Source</td></tr>

<tr>
<td valign="top" class="whs4">
<p class=TexteTableau>DEAR</td>
<td valign="top" class="whs4">
<p class=TexteTableau>If SRC_CUSTOMER.DEAR = 0 then 'MR'</p>
<p class=TexteTableau>If SRC_CUSTOMER.DEAR = 1 then 'MRS' else 'MS'</td>
<td valign="top" class="whs4">
<p class=TexteTableau><span class=Code>CASEWHEN(SRC_CUSTOMER.DEAR=0, 'MR', 
 CASEWHEN( SRC_CUSTOMER.DEAR=1, 'MRS', 'MS') )</span></td>
<td valign="top" class="whs4">
<p class=TexteTableau>Source</td></tr>

<tr>
<td valign="top" class="whs4">
<p class=TexteTableau>CUST_NAME</td>
<td valign="top" class="whs4">
<p class=TexteTableau>Concatenation of SRC_CUSTOMER.FIRST_NAME and SRC_CUSTOMER.LAST_NAME 
 in upper case</td>
<td valign="top" class="whs4">
<p class=TexteTableau><span class=Code>SRC_CUSTOMER.FIRST_NAME || ' ' || 
 UCASE(SRC_CUSTOMER.LAST_NAME)</span></td>
<td valign="top" class="whs4">
<p class=TexteTableau>Source</td></tr>

<tr>
<td valign="top" class="whs4">
<p class=TexteTableau>ADDRESS</td>
<td valign="top" class="whs4">
<p class=TexteTableau>SRC_CUSTOMER.ADDRESS</td>
<td valign="top" class="whs4">
<p class=TexteTableau><span class=Code>SRC_CUSTOMER.ADDRESS</span></td>
<td valign="top" class="whs4">
<p class=TexteTableau>Source</td></tr>

<tr>
<td valign="top" class="whs4">
<p class=TexteTableau>CITY_ID</td>
<td valign="top" class="whs4">
<p class=TexteTableau>SRC_CUSTOMER.CITY_ID</td>
<td valign="top" class="whs4">
<p class=TexteTableau><span class=Code>SRC_CUSTOMER.CITY_ID</span></td>
<td valign="top" class="whs4">
<p class=TexteTableau>Source</td></tr>

<tr>
<td valign="top" class="whs4">
<p class=TexteTableau>PHONE</td>
<td valign="top" class="whs4">
<p class=TexteTableau>SRC_CUSTOMER.PHONE</td>
<td valign="top" class="whs4">
<p class=TexteTableau><span class=Code>SRC_CUSTOMER.PHONE</span></td>
<td valign="top" class="whs4">
<p class=TexteTableau>Source</td></tr>

<tr>
<td valign="top" class="whs4">
<p class=TexteTableau>AGE</td>
<td valign="top" class="whs4">
<p class=TexteTableau>SRC_CUSTOMER.AGE</td>
<td valign="top" class="whs4">
<p class=TexteTableau><span class=Code>SRC_CUSTOMER.AGE</span></td>
<td valign="top" class="whs4">
<p class=TexteTableau>Source</td></tr>

<tr>
<td valign="top" class="whs4">
<p class=TexteTableau>AGE_RANGE</td>
<td valign="top" class="whs4">
<p class=TexteTableau>SRC_AGE_GROUP.AGE_RANGE</td>
<td valign="top" class="whs4">
<p class=TexteTableau><span class=Code>SRC_AGE_GROUP.AGE_RANGE</span></td>
<td valign="top" class="whs4">
<p class=TexteTableau>Staging area</td></tr>

<tr>
<td valign="top" class="whs4">
<p class=TexteTableau>SALES_PERS</td>
<td valign="top" class="whs4">
<p class=TexteTableau>Concatenation of SRC_SALES_PERSON.FIRST_NAME and 
 SRC_SALES_PERSON.LAST_NAME in uppercase</td>
<td valign="top" class="whs4">
<p class=TexteTableau><span class=Code>SRC_SALES_PERSON.FIRST_NAME || ' 
 ' || UCASE(SRC_SALES_PERSON.LAST_NAME)</span></td>
<td valign="top" class="whs4">
<p class=TexteTableau>Staging area</td></tr>

<tr>
<td valign="top" class="whs4">
<p class=TexteTableau>CRE_DATE</td>
<td valign="top" class="whs4">
<p class=TexteTableau>Today's date</td>
<td valign="top" class="whs4">
<p class=TexteTableau><span class=Code>CURDATE()</span></td>
<td valign="top" class="whs4">
<p class=TexteTableau>Target</td></tr>

<tr>
<td valign="top" class="whs4">
<p class=TexteTableau>UPD_DATE</td>
<td valign="top" class="whs4">
<p class=TexteTableau>Today's date</td>
<td valign="top" class="whs4">
<p class=TexteTableau><span class=Code>CURDATE()</span></td>
<td valign="top" class="whs4">
<p class=TexteTableau>Target</td></tr>
</table>

<h3>Steps to Follow</h3>

<h4>Insert a new interface</h4>

<ol type="1" class="whs5">
	
	<li class=kadov-p><p>In the &quot;Sales Administration&quot; folder 
 in the &quot;Demo&quot; project, right-click on Interfaces and choose 
 <span class=ElementGUI>Insert Interface</span><br>
	<br>
	<img src="insert_interface.jpg" x-maintain-ratio="TRUE" width="281px" height="265px" border="0" class="img_whs6"><br>&nbsp;</p></li>
	
	<li class=kadov-p><p>In the <span class=ElementGUI>Interface</span> 
 window, enter the name of your interface (Pop. TRG_CUSTOMER) in the <span 
 class=ElementGUI>Name</span> field <br>
	<br>
	<img src="interface_name.jpg" x-maintain-ratio="TRUE" width="139px" height="95px" border="0" class="img_whs7"><br>&nbsp;</p></li>
	
	<li class=kadov-p><p>At this point, you should enlarge your interface 
 window for easy viewing.</p></li>
</ol>

<h4>Define the Target Table</h4>

<ol type="1" class="whs5">
	
	<li class=kadov-p><p>Click on the <span style="font-weight: bold;"><B>Diagram</B></span> 
 tab to enter your working environment. An information box will appear. 
 &nbsp;You can 
 simply click <span class=ElementGUI>OK</span> to close it.<br>
	<br>
	<img src="../common/interface_drag_drop_alert.jpg" x-maintain-ratio="TRUE" width="310px" height="152px" border="0" class="img_whs8"><br>&nbsp;</p></li>
	
	<li class=kadov-p><p>Your interface <span class=ElementGUI>diagram</span> 
 tab should look as follows:<br>
	<br>
	<img src="../common/interface_diagram_tab.jpg" x-maintain-ratio="TRUE" width="562px" height="486px" border="0" class="img_whs9"><br>&nbsp;</p></li>
	
	<li class=kadov-p><p>Drag the &quot;TRG_CUSTOMER&quot; table from the 
 &quot;Sales Administration - HSQL&quot; model to the <span class=ElementGUI>Target 
 datastore </span>area on the right of the <span class=ElementGUI>Diagram</span> 
 tab.<br>
	<br>
	<img src="popcustomer.jpg" x-maintain-ratio="TRUE" width="502px" height="199px" border="0" class="img_whs10"></p></li>
</ol>

<h4>Define the Source Datastores</h4>

<ol>
	
	<li style="list-style: decimal;"
		type=1
		class=kadov-p><p>In the <span style="font-weight: bold;"><B>Diagram</B></span> 
 tab, drag the following source datastores into the <span class=ElementGUI>composition 
 panel</span> (left part of the <span class=ElementGUI>diagram</span> tab):</p></li>
	
	<ul type="disc" class="whs1">
		
		<li class=kadov-p><p>&quot;SRC_CUSTOMER&quot; from the &quot;Orders 
 Application - HSQL&quot; model</p></li>
		
		<li class=kadov-p><p>&quot;SRC_AGE_GROUP&quot; from the &quot;Parameters 
 - FILE&quot; model</p></li>
		
		<li class=kadov-p><p>&quot;SRC_SALES_PERSON&quot; from the &quot;Parameters 
 - FILE&quot; model<br>
		<img src="source_diagram_drag.jpg" x-maintain-ratio="TRUE" width="724px" height="307px" border="0" class="img_whs11"></p></li>
	</ul>
	
	<li style="list-style: decimal;"
		type=1
		class=kadov-p><p>A popup window appears to confirm the use of automatic 
 field to field mapping by Oracle Data Integrator when you drop a datastore 
 source onto the composition panel. &nbsp;Click 
 <span class=ElementGUI>Yes</span> to close this window.<br>
	<br>
	<img src="../common/interface_drag_automap_alert.jpg" x-maintain-ratio="TRUE" width="354px" height="137px" border="0" class="img_whs12"><br>&nbsp;</p></li>
</ol>

<h4>Define the Joins between the Source Datastores</h4>

<ol>
	
	<li style="list-style: decimal;"
		type=1
		class=kadov-p><p>In the <span class=ElementGUI>composition panel</span>, 
 drag the &quot;SALES_PERS_ID&quot; column from the &quot;SRC_CUSTOMER&quot; 
 table onto the &quot;SALES_PERS_ID&quot; column in the &quot;SRC_SALES_PERSON&quot; 
 table. This will define the first join on the sales representative identifier.<br>
	<br>
	<img src="join_example.jpg" x-maintain-ratio="TRUE" width="447px" height="154px" border="0" class="img_whs13"><br>&nbsp;</p></li>
	
	<li style="list-style: decimal;"
		type=1
		class=kadov-p><p>Drag the &quot;AGE&quot; column from the &quot;SRC_CUSTOMER&quot; 
 table onto the &quot;AGE_MIN&quot; column in the &quot;SRC_AGE_GROUP&quot; 
 table.</p></li>
	
	<li class=kadov-p
		style="list-style: decimal;"
		type=1
		class=kadov-p>Modify the <span class=ElementGUI>implementation</span> 
 in the <span class=ElementGUI>Properties</span> panel as follows:</li>
	
	<ul type="disc" class="whs1">
		
		<li class=kadov-p
			class=kadov-p>Replace &quot;=&quot; with &quot;between&quot;</li>
		
		<li class=kadov-p
			class=kadov-p>Add &quot;and&quot; at the end of the text</li>
		
		<li class=kadov-p
			class=kadov-p>Drag the &quot;AGE_MAX&quot; column from &quot;SRC_AGE_GROUP&quot; 
 table into the text field.</li>
	</ul>
</ol>

<ol start="4" type="1" class="whs5">
	
	<li class=kadov-p
		class=kadov-p>You should have the following text: <span class=Code>SRC_CUSTOMER.AGE 
 between SRC_AGE_GROUP.AGE_MIN and SRC_AGE_GROUP.AGE_MAX</span><br>
	This corresponds to a join between &quot;SRC_CUSTOMER&quot; and &quot;SRC_AGE_GROUP&quot; 
 <span><br>
	<br>
	<img src="final_join.jpg" x-maintain-ratio="TRUE" width="475px" height="240px" border="0" class="img_whs14"> &nbsp;&nbsp;</span></li>
</ol>

&nbsp; 

<p class=Remarque><span class=RemarqueTitre>Note</span>: If references 
 were already defined in the models to link the source datastores, these 
 references would have appeared automatically as joins in the source diagram.</p>

<h4>Define the Transformation Rules</h4>

<p>In your diagram’s <span class=ElementGUI>Target datastore</span> area, 
 columns with names that match their sources are mapped automatically (by 
 matching column names). All you have to do in this case is to define the 
 transformation rules for the following fields: CUSTID, DEAR, CUST_NAME, 
 SALES_PERS, CRE_DATE and UPD_DATE.</p>

<p>The transformation rules are defined on each target column as follows:</p>

<ol type="1" class="whs5">
	
	<li class=kadov-p><p>Select the target column that you wish to load 
 by clicking on its name.</p></li>
	
	<li style="list-style: decimal;"
		type=1
		class=kadov-p><p>In the <span class=ElementGUI>implementation</span> 
 field in the bottom left, create the rule either by dragging the required 
 columns from the source tables in the text field, or by opening the expression 
 editor by clicking on the <img src="../common/button_expression_editor.gif" x-maintain-ratio="TRUE" width="16px" height="16px" border="0" class="img_whs15"> button.</p></li>
	
	<li class=kadov-p><p>Make sure that you select the environment in which 
 your transformation will be executed. Select this environment by clicking 
 on one of the radio buttons as shown below:<br>
	<br>
	<img src="../common/mapping_execution_area.jpg" x-maintain-ratio="TRUE" width="612px" height="70px" border="0" class="img_whs16"><br>&nbsp;</p></li>
</ol>

<p>Implement the following rules in the mappings:</p>

<ul type="disc" class="whs1">
	
	<li class=kadov-p><p><span style="font-weight: bold;"><B>CUST_ID</B></span> 
 (executed on Source): drag the &quot;SRC_CUSTOMER.CUSTID&quot; column 
 to the <span class=ElementGUI>implementation</span> field. This will simply 
 map the source table’s CUST_ID column name into our target table.</p></li>
	
	<li class=kadov-p><p><span style="font-weight: bold;"><B>DEAR</B></span> (executed 
 on Source): enter the following text: <span class=Code>CASEWHEN(SRC_CUSTOMER.DEAR=0, 
 'MR', CASEWHEN( SRC_CUSTOMER.DEAR=1, 'MRS', 'MS') )</span> You can drag 
 the &quot;SRC_CUSTOMER.DEAR&quot; column each time you need it. Save your 
 expression with <img src="../common/button_expression_save.gif" x-maintain-ratio="TRUE" width="16px" height="16px" border="0" class="img_whs15"> and validate your syntax with <img src="../common/button_expression_check.gif" x-maintain-ratio="TRUE" width="16px" height="16px" border="0" class="img_whs15">. This will map the source table’s DEAR column as a string 
 expression (0&gt;'MR', 1&gt;'MRS', 2&gt;'MS')</p></li>
	
	<li class=kadov-p><p><span style="font-weight: bold;"><B>CUST_NAME</B></span> 
 (executed on Source): open the expression editor and create the following 
 rule: <span class=Code>SRC_CUSTOMER.FIRST_NAME || ' ' || UCASE(SRC_CUSTOMER.LAST_NAME)</span><br>
	This will map the concatenated value of the first name and uppercase 
 last name of each customer.</p></li>
</ul>

<p class=Remarque><span class=AlertTitre>Caution:</span> The expression 
 editor that is used to build the expressions does not contain all of the 
 functions specific to a technology. It contains only functions that are 
 common to a large number of technologies. The fact that a function does 
 not appear in the expression editor does not prevent it from being entered 
 manually and used in an expression.</p>

<p class=Remarque><span class=RemarqueTitre>Note:</span> When opening the 
 expression editor, the following window may appear:<br>
<br>
<img src="choose_exp_editor.gif" x-maintain-ratio="TRUE" width="286px" height="126px" border="0" class="img_whs17"><br>
<br>
Select &quot;Hypersonic SQL&quot; and click <span class=ElementGUI>OK</span>. 
 This window lets you select the SQL Language Syntax to be used by the 
 expression Editor.</p>

<p class=Remarque><span class=RemarqueTitre>Note:</span> If you were to 
 execute this mapping on the target, the expression editor would give you 
 the syntax for your target system (also Hypersonic SQL in this case).</p>

<ul type="disc" class="whs1">
	
	<li class=kadov-p><p><span style="font-weight: bold;"><B>SALES_PERS</B></span> 
 (executed in the staging area): open the expression editor and create 
 the following rule: <span class=Code>SRC_SALES_PERSON.FIRST_NAME || ' 
 ' || UCASE(SRC_SALES_PERSON.LAST_NAME)</span>.<br>
	This will map the concatenated value of the first name and uppercase 
 last name of each salesperson.</p></li>
</ul>

<p class=Remarque><span class=AlertTitre>Caution:</span> This rule must 
 be executed in the staging area! The source in this example is a flat 
 file, and as such is not associated to an engine that supports concatenation.</p>

<ul type="disc" class="whs1">
	
	<li class=kadov-p><p><span style="font-weight: bold;"><B>CRE_DATE</B></span> 
 and <span style="font-weight: bold;"><B>UPD_DATE</B></span> (both executed on 
 Target): enter the <span class=Code>CURDATE()</span> function, check the 
 &quot;Active Mapping&quot; box, and choose to execute the expression on 
 the target. For CRE_DATE, you only want the mapping performed on Insert. 
 To do this, scroll to the bottom of the mapping area and uncheck Update. 
 For UPD_DATE, you only want the date where a record is updated. To do 
 this, uncheck the Insert checkbox in the UPD_DATE mapping.<br>
	<br>
	<img src="../common/update_check.jpg" x-maintain-ratio="TRUE" width="656px" height="71px" border="0" class="img_whs18"> </p></li>
</ul>

<p class=Remarque><span class=RemarqueTitre>Note</span>: The <img src="../common/button_expression_check.gif" x-maintain-ratio="TRUE" width="16px" height="16px" border="0" class="img_whs15"> button calls your source server to check the syntax of the 
 SQL code you have entered. This check can only be performed when your 
 rule is entirely executed on the source server. In the event of an error, 
 an error window will appear. Click on the <span class=ElementGUI>Details</span> 
 button to display the error message sent by the source server.</p>

<p>Your transformation rules should now resemble the screen below.</p>

<p><img src="final_target.jpg" x-maintain-ratio="TRUE" width="347px" height="161px" border="0" class="img_whs19"><br>&nbsp;</p>

<p>The icons on the left indicate the first letter of the data type in 
 the target column (n: numeric, v: varchar, d: date). The other icons indicate 
 the expressions’ execution location:</p>

<table x-use-null-cells>

<tr>
<td valign="top" class="whs4"><img src="../common/execute_source.gif" x-maintain-ratio="TRUE" width="11px" height="11px" border="0" class="img_whs20"> </td>
<td valign="top" class="whs4">
<p class=TexteTableau>source</td></tr>

<tr>
<td valign="top" class="whs4"><img src="../common/execute_staging.gif" x-maintain-ratio="TRUE" width="11px" height="11px" border="0" class="img_whs20"> </td>
<td valign="top" class="whs4">
<p class=TexteTableau>staging area</td></tr>

<tr>
<td valign="top" class="whs4"><img src="../common/execute_target.gif" x-maintain-ratio="TRUE" width="11px" height="11px" border="0" class="img_whs20"> </td>
<td valign="top" class="whs4">
<p class=TexteTableau>target</td></tr>
</table>

&nbsp; 

<p class=Remarque><span class=RemarqueTitre>Note</span>: If the mapping 
 <span class=ElementGUI>Ind</span> indicator displays a <img src="../../images/err_level_e.gif" x-maintain-ratio="TRUE" width="11px" height="11px" border="0" class="img_whs20"> icon, 
 you have an error in your mapping. In this case, select the target field 
 at fault and verify your input. Alternately, you can click the <span class=ElementGUI>Errors</span> 
 button at the top of the <span class=ElementGUI>Diagram</span> tab, then 
 click on the <span class=ElementGUI>Details</span> button in the displayed 
 window for more detailed information on the type of error.</p>

<h4>Choose the Data Loading Strategies (LKM) </h4>

<p>In the <span style="font-weight: bold;"><B>Flow</B></span> tab, Oracle Data 
 Integrator indicates the various steps it must perform to execute your 
 interface.</p>

<p>You have to choose the way in which to proceed (<span class=ElementGUI>Loading 
 Knowledge Module</span> - LKM) to retrieve the data from the &quot;SRC_AGE_GROUP&quot;, 
 &quot;SRC_SALES_PERSON&quot; files and from the &quot;SRC_CUSTOMER&quot; 
 table in your source environment.</p>

<ol type="1" class="whs5">
	
	<li class=kadov-p>
	<p class="whs21">Click on the <span style="font-weight: bold;"><B>Source 
 Set </B></span>(SS_x) that corresponds to the loading of the &quot;SRC_AGE_GROUP&quot; 
 file and choose the &quot;<span style="font-weight: bold;"><B>LKM File to 
 SQL</B></span>&quot; module from the list of loading knowledge modules.<br>
	<br>
	<img src="popcuss.jpg" x-maintain-ratio="TRUE" width="543px" height="274px" border="0" class="img_whs22"></p>
	
	&nbsp; 
	</li>
	
	<li class=kadov-p><p class="whs21">Click on the second 
 <span style="font-weight: bold;"><B>Source Set </B></span>(SS_x) that corresponds 
 to the loading of the &quot;SRC_SALES_PERSON&quot; file and choose the 
 &quot;<span style="font-weight: bold;"><B>LKM File to SQL</B></span>&quot; module 
 from the list of loading knowledge modules.</p></li>
	
	<li class=kadov-p><p class="whs21">Click on the last <span 
 style="font-weight: bold;"><B>Source Set </B></span>(SS_x) that corresponds to 
 the loading of the &quot;SRC_CUSTOMER&quot; table and choose the &quot;<span 
 style="font-weight: bold;"><B>LKM SQL to SQL</B></span>&quot; module from the 
 list of loading knowledge modules.</p></li>
	
	<li class=kadov-p><p>Your <span class=ElementGUI>Flow</span> screen 
 should now look like the image below:<br>
	<br>
	<img src="flow_image.jpg" x-maintain-ratio="TRUE" width="610px" height="336px" border="0" class="img_whs23"></p></li>
</ol>

<h4>Choose the Data Integration Strategy (IKM) </h4>

<p>Upon completion of the loading phase, you must choose the strategy to 
 adopt for the integration of the data into the target table. &nbsp;To 
 do this, you must specify the Integration Knowledge Module (IKM) that 
 will be used.</p>

<ol type="1" class="whs5">
	
	<li class=kadov-p><p>Click on the <span class=ElementGUI>Target+Staging 
 Area</span> object and choose the &quot;<span style="font-weight: bold;"><B>IKM 
 SQL Incremental Update</B></span>&quot; knowledge module.<br>
	<br>
	<img src="kim_choose.jpg" x-maintain-ratio="TRUE" width="503px" height="289px" border="0" class="img_whs24"><br>&nbsp;</p></li>
	
	<li class=kadov-p><p>In the knowledge module <span class=ElementGUI>options</span>, 
 leave the default values. They should be as above.</p></li>
</ol>

<p>These options enable to control certain aspects of the integration strategy. 
 For example, with the <span class=Code>FLOW_CONTROL</span> option, you 
 have ordered Oracle Data Integrator to trigger the flow control operations 
 of the data before inserting it into the target table.</p>

<p class=Remarque><span class=RemarqueTitre>Note:</span> When you are choosing 
 a knowledge module, you may notice that only few of them are available. 
 To use all of the knowledge modules that are included with Oracle Data 
 Integrator, you must import them into your project. This step is not required 
 for the purposes of this guide. For more information on doing this for 
 your own projects, please refer to the Oracle Data Integrator User Guide, 
 which is part of the online help of the product documentation.</p>

<h4>Choose the Data Control Strategy</h4>

<p>Up until now you have only specified the data flow from the source to 
 the target. &nbsp;You 
 must now define how to check your data (CKM) and the constraints and rules 
 that must be satisfied before integrating the data.</p>

<ol type="1" class="whs5">
	
	<li class=kadov-p><p>In the <span style="font-weight: bold;"><B>Controls</B></span> 
 tab, choose the &quot;CKM HSQL&quot; Check Knowledge Module.<span style="font-weight: bold;"> 
 <B><br>
	<br>
	<img src="choose_kcm.jpg" x-maintain-ratio="TRUE" width="322px" height="131px" border="0" class="img_whs25"><br>
	&nbsp;</B></span></p></li>
	
	<li style="/*begin!kadov{{*/ font-weight: normal; /*}}end!kadov*/ "
		class=kadov-p><p class="whs26">Set the constraints 
 that you wish to verify (&quot;AGE &gt; 21&quot;, , 'PK_TRG_CITY' and 
 &quot;FK_CUST_CITY&quot;) to ‘Yes’, as is seen below:<br>
	<br>
	<img src="choose_keys.jpg" x-maintain-ratio="TRUE" width="333px" height="108px" border="0" class="img_whs27"></p></li>
</ol>

<p class="whs26">&nbsp;</p>

<p class="whs26">You are now ready to execute your interface.</p>

<h4>Execute the Interface</h4>

<ol type="1" class="whs5">
	
	<li class=kadov-p><p>Click the <span class=ElementGUI>Execute</span> 
 button in the <span class=ElementGUI>Interface</span> window to run your 
 interface. </p></li>
	
	<li class=kadov-p><p>A window prompting to save the interface appears. 
 Click <span class=ElementGUI>Yes</span>.</p></li>
	
	<li class=kadov-p><p>Click <span style="font-weight: bold;"><B>OK</B></span> 
 in the <span class=ElementGUI>Execution</span> and <span class=ElementGUI>Information</span> 
 windows.</p></li>
</ol>

<p>Oracle Data Integrator now automatically generates the SQL code and 
 starts an execution session.</p>

<h4>Follow the Interface’s Execution in Operator</h4>

<ol type="1" class="whs5">
	
	<li class=kadov-p><p>To follow the result of your execution in the 
 <span style="font-weight: bold;"><B>Operator</B></span>, click on the <img src="../common/button_log.gif" x-maintain-ratio="TRUE" width="16px" height="16px" border="0" class="img_whs15"> icon in your menu bar. </p></li>
	
	<li class=kadov-p><p>The <span class=ElementGUI>Operator </span>window 
 that subsequently opens (and can be refreshed using the <img src="../common/button_refresh.gif" x-maintain-ratio="TRUE" width="16px" height="16px" border="0" class="img_whs15"> button if the window is already open) details the execution 
 process tasks.</p></li>
</ol>

<h3>Interpreting the Results</h3>

<h4>The Processed Records</h4>

<ol>
	
	<li style="list-style: decimal;"
		type=1
		class=kadov-p><p>In <span style="font-weight: bold;"><B>Operator</B></span>, 
 open the window for the &quot;Pop. TRG_CUSTOMER&quot; <span class=ElementGUI>step</span> 
 by double-clicking on the corresponding icon in the execution tree. A 
 new window opens to the right of the screen.</p></li>
	
	<li class=kadov-p><p>In the <span class=ElementGUI>Execution</span> 
 tab, you will notice that the loading of the &quot;TRG_CUSTOMER&quot; 
 table produced 25 inserts and isolated 9 errors in an error table. <br>
	<br>
	<img src="num_inserts.jpg" x-maintain-ratio="TRUE" width="296px" height="41px" border="0" class="img_whs28"></p></li>
</ol>

<h4>The Resulting Data</h4>

<p>You can view the data resulting from your interface in the <span style="font-weight: bold;"><B>Designer</B></span> 
 module.</p>

<ol>
	
	<li style="list-style: decimal;
				/*begin!kadov{{*/ font-weight: normal;
				font-weight: bold; /*}}end!kadov*/ "
		type=1
		class=kadov-p><p class="whs2"><span style="font-weight: normal;">Expand 
 the</span> <span style="font-weight: normal;">&quot;Sales Administration 
 - HSQL&quot; model and select the &quot;TRG_CUSTOMER&quot; table.</span></p></li>
	
	<li style="/*begin!kadov{{*/ font-weight: normal; font-weight: bold; /*}}end!kadov*/ "
		class=kadov-p><p class="whs2"><span style="font-weight: normal;">Right-click 
 and choose </span><span class=ElementGUI>Data</span><span style="font-weight: normal;"> 
 to view the data in the target table.</span><br>
	<br>
	<img src="view_data.jpg" x-maintain-ratio="TRUE" width="665px" height="207px" border="0" class="img_whs29"><br>&nbsp;</p></li>
</ol>

<h4>Invalid Records and Incorrect Data</h4>

<p>The interface you have executed has identified and isolated <span style="font-weight: bold;"><B>9</B></span> 
 invalid records in an error table that was automatically created for you. 
 You can access the invalid records by selecting the target table (TRG_CUSTOMER) 
 from your model, then choosing <span class=ElementGUI>Control &gt; Errors</span> 
 from the popup menu.</p>

<p>&nbsp;</p>

<p><img src="view_error_data.jpg" x-maintain-ratio="TRUE" width="550px" height="399px" border="0" class="img_whs30"></p>

<p>&nbsp;</p>

<p>From here, you can see that the interface rejected:</p>

<ul type="disc" class="whs1">
	
	<li class=kadov-p><p><span style="font-weight: bold;"><B>2</B></span> records 
 that did not satisfy the &quot;FK_CUST_CITY&quot; constraint (i.e. have 
 a city number that does not exist in the table of cities).</p></li>
	
	<li class=kadov-p><p><span style="font-weight: bold;"><B>7 </B></span>records 
 that did not satisfy the business rule acting on customers under 21 (&quot;AGE 
 &gt; 21&quot; constraint).</p></li>
</ul>

<p>The invalid records were saved into an error table and not integrated 
 into the target table. </p>

<h4>Correcting Invalid data </h4>

<ol>
	
	<li style="list-style: decimal;"
		type=1
		class=kadov-p><p>Expand the tree structure for the &quot;Orders 
 Application - HSQL&quot; model</p></li>
	
	<li style="list-style: decimal;"
		type=1
		class=kadov-p><p>Right-click on &quot;SRC_CUSTOMER&quot; and select 
 <span class=ElementGUI>Data</span></p></li>
	
	<li style="list-style: decimal;"
		type=1
		class=kadov-p><p>Search on the screen for the client row having 
 a CUSTID equal to &quot;203&quot;. You can sort the table by clicking 
 on the column headers. If the customer 203 is not visible, click the <span 
 class=ElementGUI>Refresh</span> button to refresh the display.</p></li>
	
	<li class=kadov-p><p>Double-click on the value of the &quot;CITY_ID&quot; 
 column for this customer in order to modify it. The new value has to be 
 107 (rather than 208)<br>
	<br>
	<img src="change_source_data.jpg" x-maintain-ratio="TRUE" width="665px" height="500px" border="0" class="img_whs31"><br>&nbsp;</p></li>
	
	<li style="list-style: decimal;"
		type=1
		class=kadov-p><p>Click on <span class=ElementGUI>Apply</span> and 
 then <span class=ElementGUI>OK</span></p></li>
	
	<li class=kadov-p><p>Re-execute the &quot;Pop. TRG_CUSTOMER&quot; interface 
 by selecting the <span class=ElementGUI>Execute</span> option in the contextual 
 menu.</p></li>
</ol>

<h4>The Records that were Processed</h4>

<ol>
	
	<li style="list-style: decimal;"
		type=1
		class=kadov-p><p>In <span class=ElementGUI>Operator</span>, click 
 on the <img src="../common/button_refresh.gif" x-maintain-ratio="TRUE" width="16px" height="16px" border="0" class="img_whs15"> to refresh the screen.</p></li>
	
	<li style="list-style: decimal;"
		type=1
		class=kadov-p><p>Edit the &quot;Pop. TRG_CUSTOMER&quot; <span class=ElementGUI>step</span> 
 window by double-clicking on the corresponding icon in the execution tree. 
 A new window will open on the right side of the screen.</p></li>
	
	<li class=kadov-p><p>In the <span class=ElementGUI>Execution</span> 
 tab, you will notice that the loading of the &quot;TRG_CUSTOMER&quot; 
 table produced 1 insertion (the record that you have just modified) and 
 isolated 8 invalid records in the error table.<br>
	<br>
	<img src="num_updates.jpg" x-maintain-ratio="TRUE" width="295px" height="42px" border="0" class="img_whs32"></p></li>
</ol>

<p align="right" class="whs33"><a HREF="ctr_src_customer.htm"
					style="x-condition: PRINT_EXCLUDE;">&lt;&lt; &quot;SRC_CUSTOMER&quot; 
 Control</a> | <a HREF="poptrgsales.htm"
					style="x-condition: PRINT_EXCLUDE;">&quot;Pop. TRG_SALES&quot; 
 Interface &gt;&gt;</a></p>

</body>
</html>
