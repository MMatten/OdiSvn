<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<head>
<title>Files</title>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
<meta name="generator" content="RoboHelp by eHelp Corporation www.ehelp.com">
<link rel="stylesheet" href="../include/common_ns.css"><script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='../include/common.css'>");}
//-->
</script>
<script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute; left:0px; top:0px; z-index:4; visibility:hidden; }
-->
</style><script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script  type="text/javascript" language="javascript1.2">
    <!--
    var linkedScrollbarStyle = "<link rel='stylesheet' href='../wf_topics.css'>";
    if( (!isTopicOnly()) &&(parent.gbFHPureHtml == null) )
    {
        document.write(linkedScrollbarStyle);
    }
    //-->
</script>
</head>
<body><script type="text/javascript" language="javascript1.2">
<!--
if (window.addTocInfo)
{
addTocInfo("Jython Quick Reference\nThe Basics\nData Types\nFiles");

  addShowButton();
}
if (window.setRelStartPage)
{
setRelStartPage("../index.htm");

	sendTopicLoaded();
	autoSync(1);
	sendSyncInfo();
	sendAveInfo();
	sendBgColorInfo();
}
//-->
</script>
<h1>Files</h1>

<p>File objects are handled with built-in functions. The <span class=Code>open</span> 
 method is used to open a file for reading or writing operations.</p>

<p>&nbsp;</p>

<p>The following table shows the most common methods used for files</p>

<table x-use-null-cells>

<p>F </p>

<tr>
<th class=whs2
	style="x-cell-content-align: top;"
	valign=top>
<p class=TitreTableau
	style="font-weight: bold;">Operation</th>
<th class=whs3
	style="x-cell-content-align: top;"
	valign=top>
<p class=TitreTableau
	style="font-weight: bold;">Description </th></tr>

<tr>
<td class=whs4>
<p><span class=Code>f = open(filename [, mode='r'])</span></td>
<td class=whs5>
<p>Opens a file in the proper mode:</p>
<p>mode :</p>
<p><span class=Code>'r'</span> : Read</p>
<p><span class=Code>'w'</span> : Write. Create the file if it does not 
 exist</p>
<p><span class=Code>'a'</span> : Append.</p>
<p><span class=Code>'+'</span> : (added to the previous modes - example 
 'a+') opens the file for updates </p>
<p><span class=Code>'b'</span> : (added to the previous modes - example 
 'rb') open the file in binary mode</td></tr>

<tr>
<td class=whs6>
<p><span class=Code>f.close()</span></td>
<td class=whs7>
<p>Closes the f file</td></tr>

<tr>
<td class=whs8>
<p><span class=Code>f.fileno()</span></td>
<td class=whs9>
<p>Returns descriptor of the f file</td></tr>

<tr>
<td colspan=1
	rowspan=1
	class=whs10>
<p><span class=Code>f.flush()</span></td>
<td colspan=1
	rowspan=1
	class=whs11>
<p>Empties the internal buffer of f</td></tr>

<tr>
<td class=whs12>
<p><span class=Code>f.isatty()</span></td>
<td class=whs13>
<p>Returns true if f is a TTY</td></tr>

<tr>
<td colspan=1
	rowspan=1>
<p><span class=Code>f.read([size])</span></td>
<td colspan=1
	rowspan=1>
<p>Reads a maximum of size bytes from the file and returns a string</td></tr>

<tr>
<td colspan=1
	rowspan=1>
<p><span class=Code>f.readline()</span></td>
<td colspan=1
	rowspan=1>
<p>Reads a line from f</td></tr>

<tr>
<td colspan=1
	rowspan=1>
<p><span class=Code>f.readlines()</span></td>
<td colspan=1
	rowspan=1>
<p>Reads until the end of file (EOF) and returns a list of lines</td></tr>

<tr>
<td colspan=1
	rowspan=1>
<p><span class=Code>f.xreadlines() </span></td>
<td colspan=1
	rowspan=1>
<p>Returns a sequence without reading until the end of file (preferred 
 to readlines()</td></tr>

<tr>
<td colspan=1
	rowspan=1>
<p><span class=Code>f.seek(offset[, whence=0])</span></td>
<td colspan=1
	rowspan=1>
<p>Sets the file's current position to 'offset' bytes from 'whence':</p>
<p>0: from the beginning of the file</p>
<p>1: from the current location</p>
<p>2: from the end of the file</td></tr>

<tr>
<td colspan=1
	rowspan=1>
<p><span class=Code>f.tell()</span></td>
<td colspan=1
	rowspan=1>
<p>Returns the current location in the file</td></tr>

<tr>
<td colspan=1
	rowspan=1>
<p><span class=Code>f.write(str)</span></td>
<td colspan=1
	rowspan=1>
<p>Writes str into the file</td></tr>

<tr>
<td colspan=1
	rowspan=1>
<p><span class=Code>f.writelines(list)</span></td>
<td colspan=1
	rowspan=1>
<p>Writes a list of strings in the file</td></tr>
</table>

<p>&nbsp;</p>

</body>
</html>
