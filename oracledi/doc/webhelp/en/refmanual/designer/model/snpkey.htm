<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html DIR=LTR>

<head>
<title>Key</title>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
<meta name="generator" content="RoboHelp by eHelp Corporation www.ehelp.com">
<link rel="stylesheet" href="../../../include/common_ns.css"><script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='../../../include/common.css'>");}
//-->
</script>
<style type="text/css">
<!--
ul.whs1 { list-style:disc; }
th.whs2 { x-cell-content-align:top; }
td.whs3 { x-cell-content-align:top; }
-->
</style><script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute; left:0px; top:0px; z-index:4; visibility:hidden; }
-->
</style><script type="text/javascript" language="javascript1.2" src="../../../whtopic.js"></script>
<script type="text/javascript" language="javascript1.2" src="../../../whutils.js"></script>
<script type="text/javascript" language="javascript" src="../../../whver.js"></script>
<script  type="text/javascript" language="javascript1.2">
    <!--
    var linkedScrollbarStyle = "<link rel='stylesheet' href='../../../wf_topics.css'>";
    if( (!isTopicOnly()) &&(parent.gbFHPureHtml == null) )
    {
        document.write(linkedScrollbarStyle);
    }
    //-->
</script>
</head>
<body><script type="text/javascript" language="javascript1.2">
<!--
if (window.addTocInfo)
{
addTocInfo("Reference Manual\nDesigner\nModels\nDatastore\nKeys");

  addShowButton();
}
if (window.setRelStartPage)
{
setRelStartPage("../../../index.htm");

	sendTopicLoaded();
	autoSync(1);
	sendSyncInfo();
	sendAveInfo();
	sendBgColorInfo();
}
//-->
</script>
<h1>Keys</h1>

<p>A key is a set of datastore columns that enables a datastore row to 
 be identified and/or accessed in a privileged way in terms of performance 
 (index). Some drivers recover the key descriptions during a reverse engineering 
 process. It is also possible to enter a key definition directly into the 
 Repository.</p>

<h2>What is the point of declaring a primary or alternate key?</h2>

<p>A primary or alternate key is useful in several ways:</p>

<ul type="disc" class="whs1">
	
	<li class=kadov-p><p>It improves readability of the model</p></li>
	
	<li class=kadov-p><p>It enables the consistency checking of linked 
 data, and thus the non-existence of duplicates to be verified </p></li>
	
	<li class=kadov-p><p>Checking a reference also allows comprehension 
 of the model to be validated. If the application data is 100% inconsistent 
 compared to the key you have declared, you can assume that an invalid 
 key identification was used.</p></li>
	
	<li class=kadov-p><p>Identification rules allow an flow quality control 
 procedure to be generated in this Datastore. For example, if you declare 
 (or reverse engineer) a primary or alternate key on the datastore &quot;Invoice&quot;, 
 all the interfaces loading the invoice will exclude those with the same 
 invoice number. </p></li>
</ul>

<p class=Remarque><span class=AlertTitre>Caution: </span>Only technologies 
 supporting SQL language support static data consistency control. </p>

<p class=Remarque><span class=RemarqueTitre>Note:</span> A non-unique index 
 is purely informative and will not be checked.</p>

<p class=Remarque><span class=AlertTitre>Caution:</span> Creating a key 
 or an index in the repository does not create an object in the data server 
 on which the model is based.</p>

<h2>General Properties</h2>

<table x-use-null-cells>

<tr>
<th valign="top" class="whs2">
<p class=TitreTableau>Properties</th>
<th valign="top" class="whs2">
<p class=TitreTableau>Description</th></tr>

<tr>
<td valign="top" class="whs3">
<p class=TexteTableau>Name</td>
<td valign="top" class="whs3">
<p class=TexteTableau>Name of the key</td></tr>

<tr>
<td valign="top" class="whs3">
<p class=TexteTableau>Key or Type of index</td>
<td valign="top" class="whs3">
<ul type="disc" class="whs1">
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>Primary key: 
 a unique key, preferred for all criteria, objective (all these columns 
 must be completed) and subjective (conciseness, performance, etc). Data 
 Integrator uses the primary key as the default update key when the datastore 
 is an interface target.</p></li>
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>Alternate key: 
 a unique key not used as the primary key.</p></li>
	
	<li class=kadov-p-CTexteTableau><p class=TexteTableau>Not unique index: 
 An index used simply to improve access performance. </p></li>
</ul></td></tr>
</table>

<h2>Columns</h2>

<p>This tab allows the columns of the table participating in the key to 
 be selected.</p>

<h2>Control</h2>

<p>The quality control properties are taken into account during a <a href="../../concept/dataquality.htm#FlowQuality">flow 
 control </a>or during a <a href="../../concept/dataquality.htm#StaticQuality">static 
 control</a>. </p>

<table x-use-null-cells>

<tr>
<th valign="top" class="whs2">
<p class=TitreTableau>Property</th>
<th valign="top" class="whs2">
<p class=TitreTableau>Description</th></tr>

<tr>
<td valign="top" class="whs3">
<p class=TexteTableau>Defined in the database</td>
<td valign="top" class="whs3">
<p class=TexteTableau>Shows if this key has been defined in the database 
 dictionary (or in the described application). A key that has been reverse 
 engineered has been defined in the database.</td></tr>

<tr>
<td valign="top" class="whs3">
<p class=TexteTableau>Active</td>
<td valign="top" class="whs3">
<p class=TexteTableau>Shows if the key is active in the database. In some 
 technologies, the dictionary may contain active keys (Enable) or non-active 
 keys (Disable), that is, where the data server does not check data consistency.</td></tr>

<tr>
<td valign="top" class="whs3">
<p class=TexteTableau
	style="font-weight: bold;">Control</td>
<td valign="top" class="whs3">
<p class=TexteTableau
	style="font-weight: bold;"><span style="font-weight: bold;"><B>Shows the 
 type of quality control for which this key will be checked.</B></span></td></tr>

<tr>
<td valign="top" class="whs3">
<p class=TexteTableau>Flow</td>
<td valign="top" class="whs3">
<p class=TexteTableau>During an flow control in this datastore, the key 
 will be verified if this box is checked. This information is a default 
 value that can be modified when the interface is designed. It is recommended 
 to activate this type of control to ensure data quality, even if the target 
 technology also checks the information.</td></tr>

<tr>
<td valign="top" class="whs3">
<p class=TexteTableau>Static</td>
<td valign="top" class="whs3">
<p class=TexteTableau>During a static control, that is, during a check 
 of the data already present in this datastore, the key will be verified 
 if the box is checked.</td></tr>
</table>

<p>When the <span class=ElementGUI>Check </span>button is clicked, the 
 static control is executed by the graphical interface, and the only visible 
 result is that the number of erroneous rows is displayed on the <span 
 class=ElementGUI>Control</span> tab. To obtain a trace of the rows in 
 error, a static control (called asynchronous) must be launched from either 
 the Datastore or the Model window.</p>

</body>
</html>
